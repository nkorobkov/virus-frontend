{"version":3,"sources":["utils/styleUtils.js","components/Field.js","components/InfoBar.js","utils/gameEngine.js","utils/constants.js","components/Game.js","components/Rules.js","components/Menu.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["resolveImagePath","state","path","Cell","img_path","this","props","alt","className","src","onClick","bind","h","w","React","Component","FieldRow","row","Array","size","keys","map","number","N","key","field","onCellClick","Field","fieldElement","sizeH","sizeW","TeamName","id","MoveDot","class","img","MovesBar","empty","n","MenuButton","clicked","pressed","setState","gameState","isGameEnded","history","length","onMenuClick","Hint","sl","stepsLeft","tm","toMove","winner","type","team","RollBackButton","shouldShow","onRollBack","PlayAgainButton","text","isGameCompleted","isEnabled","isBackendConnected","isOpponentConnected","disabled","onPlayAgain","RoomId","copied","roomId","navigator","clipboard","writeText","setTimeout","ConnectionStatus","lightClassBackend","lightClassOpponent","backend","opponent","InfoBar","hw2Index","maxW","index2W","index","index2H","Math","floor","getAllNeibours","maxH","result","push","isActiveNow","seen","indexOf","neibIndex","some","x","isStepValid","cellState","neibours","getNextState","currentState","isValidMoveExists","tmp_state","i","found","k","stepped_field","slice","SERVER_URL","process","EASY_AI_ENABLED","REACT_APP_EASY_AI_ENABLED","MEDIUM_AI_ENABLED","REACT_APP_MEDIUM_AI_ENABLED","HARD_AI_ENABLED","REACT_APP_HARD_AI_ENABLED","ONLINE_MODE_ENABLED","REACT_APP_ONLINE_MODE_ENABLED","ANY_AI_ENABLED","Game","setUpSocket","url","protocol","aiType","timeouts","console","log","socket","WebSocket","onopen","onmessage","msg","handleSocketData","JSON","parse","data","onclose","code","a","handleReceivedMove","resetStateFromField","handleRollBack","move","pop","currState","sign","abs","handlePlayAgain","axios","post","handleCellClick","playerCantMoveNow","onlineGameNotReady","makeStep","sendStateToAiIfNeeded","sendMoveToOpponent","new_state","send","stringify","sendStateIfNeeded","movesMade","reduce","y","newState","getInfoBarColor","fill","close","forEach","clearTimeout","Error","step","Rules","onNext","currentSlide","Object","onPrev","1","imgSrc","element","2","3","4","5","onCloseClick","ReactModal","setAppElement","Menu","handleRoomIdChange","event","validatedId","target","value","replace","roomToJoin","canJoin","handleJoinOnlineClick","isJoinLoading","checkIfRoomCanBeJoined","onOnlineClick","showNotification","handleCreateOnlineClick","get","response","exists","teams_joined","message","notification","handleToggleRules","showRules","joinLoading","role","aria-label","onNavigationClick","placeholder","onChange","isOpen","onRequestClose","overlayClassName","shouldFocusAfterRender","Footer","href","App","handleNavigation","page","activePage","handleOnlineGame","handleMenuClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"2RAeeA,I,gBAAAA,EAdf,SAA0BC,GACtB,IAAIC,EAAO,QACX,OAAQD,GACJ,KAAK,EAAGC,GAAQ,YAAa,MAC7B,KAAK,EAAGA,GAAQ,iBAAkB,MAClC,KAAK,EAAGA,GAAQ,eAAgB,MAChC,KAAM,EAAGA,GAAQ,gBAAiB,MAClC,KAAM,EAAGA,GAAQ,cAAe,MAChC,QAASA,GAAQ,YAGrB,OAAOA,G,OCTLC,E,4JACF,WACI,IAAMC,EAAWJ,EAAiBK,KAAKC,MAAML,OAC7C,OACI,qBAAKM,IAAI,OAAOC,UAAU,OAAOC,IAAKL,EACjCM,QAASL,KAAKC,MAAMI,QAAQC,KAAKN,KAAMA,KAAKC,MAAMM,EAAGP,KAAKC,MAAMO,S,GAL9DC,IAAMC,WASnBC,E,4JACF,WAAU,IAAD,OACCC,EAAM,YAAIC,MAAMb,KAAKC,MAAMa,MAAMC,QAAQC,KAAI,SAAAC,GAC/C,IAAMV,EAAI,EAAKN,MAAMiB,EACfV,EAAIS,EACJE,EAAMZ,EAAI,EAAKN,MAAMa,KAAON,EAC9BZ,EAAQ,EAAKK,MAAMmB,MAAMD,GAC7B,OAAO,cAAC,EAAD,CAAMZ,EAAGA,EAAGC,EAAGA,EACTH,QAAS,EAAKJ,MAAMoB,YACpBzB,MAAOA,GAFUuB,MAIlC,OACI,qBAAKhB,UAAU,YAAf,SACKS,Q,GAbMH,IAAMC,WAqCdY,E,4JAbX,WAAU,IAAD,OAKL,OAJAtB,KAAKuB,aAAe,YAAIV,MAAMb,KAAKC,MAAMuB,OAAOT,QAAQC,KAAI,SAAAC,GACxD,OAAO,cAAC,EAAD,CAAUH,KAAM,EAAKb,MAAMwB,MAAOP,EAAGD,EAC3BI,YAAa,EAAKpB,MAAMoB,YAAaD,MAAO,EAAKnB,MAAMmB,OADfH,MAIzD,qBAAKd,UAAU,aAAf,SACSH,KAAKuB,mB,GATNd,IAAMC,WC/BpBgB,E,4JACJ,WACE,IAAMvB,EACJ,cAAkC,IAAlBH,KAAKC,MAAM0B,GAAW,YAAc,YACtD,OACE,sBAAMxB,UAAWA,EAAjB,SAA+C,IAAlBH,KAAKC,MAAM0B,GAAW,OAAS,Y,GAL3ClB,IAAMC,WAUvBkB,E,4JACJ,WACE,OAAO,qBAAK1B,IAAI,OAAOC,UAAWH,KAAKC,MAAM4B,MAAOzB,IAAKJ,KAAKC,MAAM6B,U,GAFlDrB,IAAMC,WAMtBqB,E,4JACJ,WACE,IAAMhC,EAAWJ,EAAiBK,KAAKC,MAAM0B,IACvCK,EAAQrC,EAAiB,GACzBQ,EACJ,aAAiC,IAAlBH,KAAKC,MAAM0B,GAAW,YAAc,YAErD,OACE,gCACE,cAAC,EAAD,CAASG,IAAK9B,KAAKC,MAAMgC,EAAI,EAAIlC,EAAWiC,EAAOH,MAAO1B,IAC1D,cAAC,EAAD,CAAS2B,IAAK9B,KAAKC,MAAMgC,EAAI,EAAIlC,EAAWiC,EAAOH,MAAO1B,IAC1D,cAAC,EAAD,CAAS2B,IAAK9B,KAAKC,MAAMgC,EAAI,EAAIlC,EAAWiC,EAAOH,MAAO1B,W,GAX3CM,IAAMC,WAiBvBwB,E,kDACJ,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IACDL,MAAQ,CACXuC,SAAS,GAEX,EAAKC,QAAU,EAAKA,QAAQ9B,KAAb,gBALE,E,2CAQnB,WACEN,KAAKqC,SAAS,CAAEF,SAAUnC,KAAKJ,MAAMuC,Y,oBAGvC,WACE,OACEnC,KAAKC,MAAMqC,UAAUC,aACmB,IAAxCvC,KAAKC,MAAMqC,UAAUE,QAAQC,OAG3B,8BACE,qBACEtC,UAAU,uCACVE,QAASL,KAAKC,MAAMyC,YAFtB,oBASF1C,KAAKJ,MAAMuC,QAEX,gCACE,qBAAKhC,UAAU,YAAf,gEAGA,sBAAKA,UAAU,UAAf,UACE,sBACEA,UAAU,8CACVE,QAASL,KAAKC,MAAMyC,YAFtB,iBAMA,sBACEvC,UAAU,8CACVE,QAASL,KAAKoC,QAFhB,sBAWJ,8BACE,qBACEjC,UAAU,uCACVE,QAASL,KAAKoC,QAFhB,wB,GAtDe3B,IAAMC,WAkEzBiC,E,4JACJ,WACE,IAAMC,EAAK5C,KAAKC,MAAMqC,UAAUO,UAC1BC,EAAK9C,KAAKC,MAAMqC,UAAUS,OAChC,OAAI/C,KAAKC,MAAMqC,UAAUC,YAErB,8BACE,sBAAKpC,UAAU,YAAf,kBACO,cAAC,EAAD,CAAUwB,GAAI3B,KAAKC,MAAMqC,UAAUU,SAD1C,aAMoB,YAApBhD,KAAKC,MAAMgD,MAAsBH,IAAO9C,KAAKC,MAAMqC,UAAUY,KAE7D,gCACuB,YAApBlD,KAAKC,MAAMgD,KACV,sBAAK9C,UAAU,YAAf,UACE,cAAC,EAAD,CAAUwB,GAAI3B,KAAKC,MAAMqC,UAAUS,SADrC,YAIA,qBAAK5C,UAAU,YAAf,uBAEF,sBAAKA,UAAU,YAAf,UACG,IACAyC,EAFH,QAEmB,IAAPA,EAAW,GAAK,IAF5B,WAIA,qBAAKzC,UAAU,YAAf,SACE,cAAC,EAAD,CAAU8B,EAAGW,EAAIjB,GAAImB,SAMpB,qBAAK3C,UAAU,YAAf,+B,GAlCIM,IAAMC,WAwCnByC,E,4JACJ,WACE,OAAInD,KAAKC,MAAMmD,WAEX,qBACEjD,UAAU,uCACVE,QAASL,KAAKC,MAAMoD,WAFtB,sBAQG,4B,GAZkB5C,IAAMC,WAgB7B4C,E,4JACJ,WACE,IAAMC,EAAOvD,KAAKC,MAAMuD,gBAAkB,aAAe,SACnDC,EACJzD,KAAKC,MAAMyD,oBAAsB1D,KAAKC,MAAM0D,oBAC9C,OAAI3D,KAAKC,MAAMmD,WAEX,qBACEjD,UAAU,uCACVyD,UAAWH,EACXpD,QAASL,KAAKC,MAAM4D,YAHtB,SAKGN,IAIA,4B,GAhBmB9C,IAAMC,WAoB9BoD,E,kDACJ,WAAY7D,GAAQ,IAAD,8BACjB,cAAMA,IACDL,MAAQ,CACXmE,QAAQ,GAHO,E,0CAMnB,WAAU,IAAD,OACP,MAAwB,WAApB/D,KAAKC,MAAMgD,KAEX,8BACE,uBAAM9C,UAAU,kBAAhB,UACE,uBAAMA,UAAU,yBAAhB,oBACS,qCAAQH,KAAKC,MAAM+D,aAE5B,wBACE7D,UAAU,sBACVE,QAAS,WACP4D,UAAUC,UAAUC,UAAU,EAAKlE,MAAM+D,QACzC,EAAK3B,SAAS,CAAE0B,QAAQ,IACxBK,YAAW,kBAAM,EAAK/B,SAAS,CAAE0B,QAAQ,MAAU,MALvD,0BAUC/D,KAAKJ,MAAMmE,OAAS,SAAW,QAKjC,4B,GA9BUtD,IAAMC,WAkCrB2D,E,4JACJ,WACE,GAAwB,YAApBrE,KAAKC,MAAMgD,KACb,OAAO,wBAGT,IAAMqB,EAAoBtE,KAAKC,MAAMyD,mBAAqB,QAAU,MAC9Da,EAAqBvE,KAAKC,MAAM0D,oBAAsB,QAAU,MAElEa,EACF,iCACE,sBAAMrE,UAAWmE,EAAoB,SADvC,cAC6D,IAC1DtE,KAAKC,MAAMyD,mBAAqB,GAAK,OAFxC,eAMEe,EACkB,WAApBzE,KAAKC,MAAMgD,KACT,iCACE,sBAAM9C,UAAWoE,EAAqB,SADxC,eAC+D,IAC5DvE,KAAKC,MAAM0D,oBAAsB,GAAK,OAFzC,eAKA,yBAGJ,OACE,sBAAKxD,UAAU,oBAAf,UACGqE,EACD,uBACCC,S,GA9BsBhE,IAAMC,WAyEtBgE,E,4JApCb,WACE,OACE,gCACE,cAAC,EAAD,CACEhB,mBAAoB1D,KAAKC,MAAMqC,UAAUoB,mBACzCC,oBAAqB3D,KAAKC,MAAMqC,UAAUqB,oBAC1CV,KAAMjD,KAAKC,MAAMgD,OAEnB,cAAC,EAAD,CACEe,OAAQhE,KAAKC,MAAMqC,UAAU0B,OAC7Bf,KAAMjD,KAAKC,MAAMgD,OAEnB,uBACA,sBAAK9C,UAAU,oBAAf,UACE,cAAC,EAAD,CAAMmC,UAAWtC,KAAKC,MAAMqC,UAAWW,KAAMjD,KAAKC,MAAMgD,OACxD,cAAC,EAAD,CACEI,WAAYrD,KAAKC,MAAMoD,WACvBD,WAAgC,YAApBpD,KAAKC,MAAMgD,OAEzB,cAAC,EAAD,CACEY,YAAa7D,KAAKC,MAAM4D,YACxBT,WAAgC,WAApBpD,KAAKC,MAAMgD,KACvBO,gBAAiBxD,KAAKC,MAAMqC,UAAUC,YACtCmB,mBAAoB1D,KAAKC,MAAMqC,UAAUoB,mBACzCC,oBAAqB3D,KAAKC,MAAMqC,UAAUqB,sBAE5C,cAAC,EAAD,CACErB,UAAWtC,KAAKC,MAAMqC,UACtBI,YAAa1C,KAAKC,MAAMyC,wB,GA7BdhC,aCxPlBiE,EAAW,SAAUpE,EAAGC,EAAGoE,GAC3B,OAAOrE,EAAIqE,EAAOpE,GAGlBqE,EAAU,SAAUC,EAAOF,GAC3B,OAAOE,EAAQF,GAGfG,EAAU,SAAUD,EAAOF,GAC3B,OAAOI,KAAKC,MAAMH,EAAQF,IAI1BM,EAAiB,SAAU3E,EAAGC,EAAG2E,EAAMP,GACvC,IAAIQ,EAAS,GA6Bb,OA5BI7E,EAAI,IACJ6E,EAAOC,KAAKV,EAASpE,EAAI,EAAGC,EAAGoE,IAC3BpE,EAAI,GACJ4E,EAAOC,KAAKV,EAASpE,EAAI,EAAGC,EAAI,EAAGoE,KAKvCrE,EAAI4E,EAAO,IACXC,EAAOC,KAAKV,EAASpE,EAAI,EAAGC,EAAGoE,IAC3BpE,EAAIoE,EAAO,GACXQ,EAAOC,KAAKV,EAASpE,EAAI,EAAGC,EAAI,EAAGoE,KAIvCpE,EAAI,IACJ4E,EAAOC,KAAKV,EAASpE,EAAGC,EAAI,EAAGoE,IAC3BrE,EAAI4E,EAAO,GACXC,EAAOC,KAAKV,EAASpE,EAAI,EAAGC,EAAI,EAAGoE,KAIvCpE,EAAIoE,EAAO,IACXQ,EAAOC,KAAKV,EAASpE,EAAGC,EAAI,EAAGoE,IAC3BrE,EAAI,GACJ6E,EAAOC,KAAKV,EAASpE,EAAI,EAAGC,EAAI,EAAGoE,KAGpCQ,GAGPE,EAAc,SAAdA,EAAwB/E,EAAGC,EAAGZ,EAAO2F,GACrC,IAAMT,EAAQH,EAASpE,EAAGC,EAAGZ,EAAM6B,OACnC,QAAI8D,EAAKC,QAAQV,IAAU,KAG3BS,EAAKF,KAAKP,GACNlF,EAAMwB,MAAM0D,KAAWlF,EAAMmD,QAG7BnD,EAAMwB,MAAM0D,KAA0B,EAAflF,EAAMmD,QACtBmC,EAAe3E,EAAGC,EAAGZ,EAAM4B,MAAO5B,EAAM6B,OAAOT,KAClD,SAACyE,GAAD,OACIH,EAAYP,EAAQU,EAAW7F,EAAM6B,OAAQoD,EAAQY,EAAW7F,EAAM6B,OAAQ7B,EAAO2F,MAAOG,MAChG,SAACC,GAAD,OAAOA,OAcbC,EAAc,SAAUhG,EAAOW,EAAGC,GACpC,GAT2BqF,EASPjG,EAAMwB,MAAMuD,EAASpE,EAAEC,EAAEZ,EAAM6B,QATbsB,EASsBnD,EAAMmD,OARjD,IAAd8C,GAGS9C,KAAa8C,EAMrB,OAAQ,EAVM,IAASA,EAAW9C,EAahC+C,EAAWZ,EAAe3E,EAAGC,EAAGZ,EAAM4B,MAAO5B,EAAM6B,OACrD8D,EAAO,GACX,OAAOO,EAAS9E,KAAI,SAACyE,GAAD,OAChBH,EAAYP,EAAQU,EAAW7F,EAAM6B,OAAQoD,EAAQY,EAAW7F,EAAM6B,OAAQ7B,EAAO2F,MAAOG,MACxF,SAACC,GAAD,OAAOA,MAIbI,EAAe,SAAUC,EAAcjD,GACzC,OAAqB,IAAjBiD,EACOjD,GAECiD,EAAejD,GAIzBkD,EAAqB,SAAUrG,GAEjC,IADA,IAAIsG,EAAS,eAAOtG,GACZuG,EAAI,EAAGA,EAAE,EAAGA,IAAI,CAEpB,IADA,IAAIC,GAAQ,EACJC,EAAE,EAAGA,EAAEH,EAAUzE,MAAMyE,EAAU1E,MAAO6E,IAC5C,GAAIT,EAAYM,EAAWnB,EAAQsB,EAAGH,EAAUzE,OAAOoD,EAAQwB,EAAGH,EAAUzE,QAAQ,CAChF2E,GAAQ,EACR,IAAIE,EAAgBJ,EAAU9E,MAAMmF,QACpCD,EAAcD,GAAKN,EAAaO,EAAcD,GAAIH,EAAUnD,QAC5DmD,EAAU9E,MAAQkF,EAClB,MAGR,IAAKF,EACD,OAAO,EAGf,OAAO,GC/GEI,EAAaC,kCAGbC,EAAe,oBAAGD,mSAAH,aAAG,EAAaE,iCAAhB,SACfC,EAAiB,oBAAGH,mSAAH,aAAG,EAAaI,mCAAhB,SACjBC,EAAe,oBAAGL,mSAAH,aAAG,EAAaM,iCAAhB,SACfC,GAAmB,oBAAGP,mSAAH,aAAG,EAAaQ,qCAAhB,SAEnBC,GAAiBR,GAAmBE,GAAqBE,ECwUvDK,G,kDApUb,WAAYlH,GAAQ,IAAD,uBACjB,cAAMA,IA6BRmH,YAAc,WACZ,IAAIC,EACEC,EAAgC,QACd,OAApB,EAAKrH,MAAMgD,OACboE,EAAMC,EAAWd,EAAa,UAAY,EAAKvG,MAAMsH,OAAS,KAEhE,EAAKC,SAAW,GACQ,WAApB,EAAKvH,MAAMgD,OACboE,EACEC,EACAd,EACA,aACC,EAAK5G,MAAMoE,QAAU,IACtB,SACA,EAAKpE,MAAMsD,MAEfuE,QAAQC,IAAI,4BAA6BL,GACzC,EAAKM,OAAS,IAAIC,UAAUP,GAC5B,EAAKM,OAAOE,OAAS,WACnB,EAAKxF,SAAS,CAAEqB,oBAAoB,IACpC+D,QAAQC,IAAI,sBAEd,EAAKC,OAAOG,UAAY,SAACC,GACvB,EAAKC,iBAAiBC,KAAKC,MAAMH,EAAII,QAEvC,EAAKR,OAAOS,QAAU,SAACL,GACrBN,QAAQC,IACN,4CACAK,EAAIM,KACJ,4BAEF,EAAKhG,SAAS,CAAEqB,oBAAoB,IACpC,EAAK8D,SAASnC,KACZjB,YAAW,WACT,EAAKgD,gBACJ,QAjEU,EAgFnBY,iBAhFmB,uCAgFA,WAAOG,GAAP,SAAAG,EAAA,yDACjBb,QAAQC,IAAI,yBAA0BS,GACjB,SAAjBA,EAAI,KAFS,gCAGT,EAAKI,mBAAmBJ,GAHf,UAKI,gBAAjBA,EAAI,KALS,gCAMT,EAAK9F,SAAS8F,EAAI,OANT,UAQI,eAAjBA,EAAI,KARS,kCAST,EAAKK,oBAAoBL,GAThB,WAWI,UAAjBA,EAAI,KAXS,kCAaT,EAAKlI,MAAMyC,cAbF,4CAhFA,wDAgHnB+F,eAAiB,WACf,GAAkC,IAA9B,EAAK7I,MAAM4C,QAAQC,QAAoC,YAApB,EAAKxC,MAAMgD,KAAlD,CAIA,IAAMT,EAAU,EAAK5C,MAAM4C,QAAQ+D,QAC7BnF,EAAQ,EAAKxB,MAAMwB,MAAMmF,QAC3BxD,EAAS,EAAKnD,MAAMmD,OACpBF,EAAY,EAAKjD,MAAMiD,UAAY,EACnCN,EAAc,EAAK3C,MAAM2C,YACzBS,EAAS,EAAKpD,MAAMoD,OAElB0F,EAAOlG,EAAQmG,MACfC,EAAYxH,EAAMsH,EAAK,GAAK,EAAKjH,MAAQiH,EAAK,IAEpDtH,EAAMsH,EAAK,GAAK,EAAKjH,MAAQiH,EAAK,KAC/B1D,KAAK6D,KAAKD,IAAc5D,KAAK8D,IAAIF,GAAa,GAE7C/F,EAAY,IAEdE,GAAUA,EACVF,EAAY,EAERN,IACFA,GAAc,EACdS,EAAS,OAIb,EAAKX,SAAS,CACZjB,MAAOA,EACP2B,OAAQA,EACRF,UAAWA,EACXL,QAASA,EACTD,YAAaA,EACbS,OAAQA,MAnJO,EAuJnB+F,gBAvJmB,sBAuJD,sBAAAT,EAAA,yDACQ,WAApB,EAAKrI,MAAMgD,KADC,iEAGV+F,IAAMC,KACc,UACtBzC,EACA,SACA,EAAK5G,MAAMoE,OACX,YARY,2CAvJC,EAmKnBkF,gBAnKmB,uCAmKD,WAAO3I,EAAGC,GAAV,iBAAA8H,EAAA,yDACVa,EACJ,EAAKvJ,MAAMmD,SAAW,EAAKnD,MAAMsD,MAA4B,YAApB,EAAKjD,MAAMgD,KAEhDmG,EACgB,WAApB,EAAKnJ,MAAMgD,QACT,EAAKrD,MAAM8D,qBAAuB,EAAK9D,MAAM+D,uBAE/CwF,GACAC,GACA,EAAKxJ,MAAM2C,cACVqD,EAAY,EAAKhG,MAAOW,EAAGC,GAXd,iEAeV,EAAK6I,SAAS9I,EAAGC,GAfP,UAgBQ,OAApB,EAAKP,MAAMgD,KAhBC,gCAiBR,EAAKqG,wBAjBG,UAmBQ,WAApB,EAAKrJ,MAAMgD,KAnBC,kCAoBR,EAAKsG,mBAAmBhJ,EAAGC,GApBnB,4CAnKC,0DA2LnB6I,SA3LmB,uCA2LR,WAAO9I,EAAGC,GAAV,2BAAA8H,EAAA,6DACHlH,EAAQ,EAAKxB,MAAMwB,MAAMmF,QACzB/D,EAAU,EAAK5C,MAAM4C,QAAQ+D,QAC/B1D,EAAY,EAAKjD,MAAMiD,UAAY,EACnCE,EAAS,EAAKnD,MAAMmD,OAEpBC,EAAS,EAAKpD,MAAMoD,OACpBT,EAAc,EAAK3C,MAAM2C,YAE7BnB,EAAMb,EAAI,EAAKkB,MAAQjB,GAAKuF,EAC1B3E,EAAMb,EAAI,EAAKkB,MAAQjB,GACvB,EAAKZ,MAAMmD,QAEbP,EAAQ6C,KAAK,CAAC9E,EAAGC,IAGC,IAAdqC,IACFE,GAAUA,EACVF,EAAY,GAGR2G,EALe,eAKE,EAAK5J,QAChBwB,MAAQA,EAAMmF,QACxBiD,EAAUhH,QAAUA,EAAQ+D,QAC5BiD,EAAU3G,UAAYA,EACtB2G,EAAUzG,OAASA,EAEdkD,EAAkBuD,KAErBjH,GAAc,EACdS,GAAUD,IA9BL,UAkCI,EAAKV,SAAS,CACzBU,OAAQA,EACR3B,MAAOA,EACPyB,UAAWA,EACXL,QAASA,EACTD,YAAaA,EACbS,OAAQA,IAxCD,qFA3LQ,0DAuOnBsG,sBAvOmB,sBAuOK,sBAAAhB,EAAA,2DAEN,EAAK1I,MAAMsD,OAAS,EAAKtD,MAAMmD,SAC/B,EAAKnD,MAAM2C,YAHL,qBAIhB,EAAK3C,MAAM8D,mBAJK,gCAKZ,EAAKiE,OAAO8B,KAAKxB,KAAKyB,UAAU,EAAK9J,QALzB,OAMlB6H,QAAQC,IAAI,0BANM,uBAQlBD,QAAQC,IAAI,2CACZ,EAAKF,SAASnC,KACZjB,YAAW,WACT,EAAKuF,sBACJ,MAZa,4CAvOL,EAwPnBJ,mBAxPmB,uCAwPE,WAAOhJ,EAAGC,GAAV,SAAA8H,EAAA,sEACb,EAAKX,OAAO8B,KAChBxB,KAAKyB,UAAU,CACbzG,KAAM,OACNyF,KAAM,CAAC,CAACnI,EAAGC,IACXZ,MAAO,EAAKA,SALG,OAQnB6H,QAAQC,IAAI,4CARO,2CAxPF,0DAmQnBc,oBAnQmB,uCAmQG,WAAOL,GAAP,2BAAAG,EAAA,sDACdlH,EAAQ+G,EAAI,MACdnF,EAAS,KACTT,GAAc,EAEZqH,EAAYxI,EAAMJ,IAAIgE,KAAK8D,KAAKe,QAAO,SAAClE,EAAGmE,GAAJ,OAAUnE,EAAImE,IAAG,GAAK,EAC7DtH,EAAU,EAAK5C,MAAM4C,QAAQ+D,MAAM,EAAGqD,GACtC7G,EAASiC,KAAKC,OAAO2E,EAAY,GAAK,GAAK,IAAM,EAAI,GAAK,EAE1DG,EAAW,CACfvH,QAASA,EACTpB,MAAOA,EACP2B,OAAQA,EACRF,UALgB,GAAM+G,EAAY,GAAK,GAOzCnC,QAAQC,IAAIqC,GACP9D,EAAkB,2BAAK,EAAKrG,OAAUmK,MAEzCxH,GAAc,EACdS,GAAUD,GAEZ,EAAKV,SAAL,2BACK0H,GADL,IAEExH,YAAaA,EACbS,OAAQA,KAxBU,4CAnQH,wDA+RnBgH,gBAAkB,WAChB,OAA2B,IAApB,EAAKpK,MAAMsD,KAAa,kBAAoB,qBA9RnD,EAAK1B,MAAQ,EACb,EAAKC,MAAQ,EACb,IAAIL,EAAQ,IAAIP,MAAM,EAAKW,MAAQ,EAAKC,OAAOwI,KAAK,GAJnC,OAKjB7I,EAAM,GAAK,EACXA,EAAM,EAAKI,MAAQ,EAAKC,MAAQ,IAAM,EACtC,EAAK7B,MAAQ,CACXwB,MAAOA,EACP2B,OAAQ,EACRF,UAAW,EACXrB,MAAO,EAAKA,MACZC,MAAO,EAAKA,MACZe,QAAS,GACTD,aAAa,EACbS,OAAQ,KACRU,oBAAoB,EACpBC,qBAAqB,EACrBT,KAAMjD,EAAMiD,KACZc,OAAQ/D,EAAM+D,QAEhB,EAAKkF,gBAAkB,EAAKA,gBAAgB5I,KAArB,gBACvB,EAAKmI,eAAiB,EAAKA,eAAenI,KAApB,gBAtBL,E,4FAyBnB,sBAAAgI,EAAA,yDAC0B,YAApBtI,KAAKC,MAAMgD,KADjB,iEAEQjD,KAAKoH,cAFb,gD,+HA6CA,sBAAAkB,EAAA,yDACEb,QAAQC,IAAI,+BACR1H,KAAK2H,OAFX,uBAII3H,KAAK2H,OAAOS,QAAU,KAJ1B,SAKUpI,KAAK2H,OAAOuC,QALtB,OAMIlK,KAAKwH,SAAS2C,QAAQC,cAN1B,gD,sFA2BA,SAAmBjC,GAAO,IAAD,OACvB,GAAInI,KAAKJ,MAAMmD,SAAW/C,KAAKJ,MAAMsD,MAAQlD,KAAKJ,MAAM2C,YACtD,MAAM,IAAI8H,MAAM,mCAElB,IAAI3B,EAAOP,EAAKO,KAChB,GAAIA,EAAKjG,OAASzC,KAAKJ,MAAMiD,UAC3B,MAAM,IAAIwH,MAAM,4BAElB3B,EAAKyB,QAAL,uCAAa,WAAOG,GAAP,SAAAhC,EAAA,0DACP1C,EAAY,EAAKhG,MAAO0K,EAAK,GAAIA,EAAK,IAD/B,gCAEH,EAAKjB,SAASiB,EAAK,GAAIA,EAAK,IAFzB,2CAAb,yD,oBA0LF,WACE,OACE,qBAAKnK,UAAU,oCAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,cAAC,EAAD,CACEqB,MAAOxB,KAAKwB,MACZC,MAAOzB,KAAKyB,MACZJ,YAAarB,KAAKkJ,gBAClB9H,MAAOpB,KAAKJ,MAAMwB,YAIxB,qBAAKjB,UAAU,iBAAf,SACE,qBACEA,UAAW,6BAA+BH,KAAKgK,kBADjD,SAGE,cAAC,EAAD,CACEtH,YAAa1C,KAAKC,MAAMyC,YACxBW,WAAYrD,KAAKyI,eACjB5E,YAAa7D,KAAK+I,gBAClBzG,UAAWtC,KAAKJ,MAChBqD,KAAMjD,KAAKC,MAAMgD,oB,GA3TdxC,IAAMC,W,oBC6FV6J,G,kDApGX,WAAYtK,GAAQ,IAAD,8BACf,cAAMA,IAyDVuK,OAAS,WACD,EAAK5K,MAAM6K,eAAiBC,OAAO3J,KAAK,EAAKnB,MAAMuI,MAAM1F,QAG7D,EAAKJ,SAAS,CAACoI,aAAc,EAAK7K,MAAM6K,aAAe,KA9DxC,EAiEnBE,OAAS,WAC2B,IAA5B,EAAK/K,MAAM6K,cAGf,EAAKpI,SAAS,CAACoI,aAAc,EAAK7K,MAAM6K,aAAe,KAnEvD,EAAK7K,MAAQ,CACT6K,aAAc,EACdtC,KAAM,CACFyC,EAAG,CACCC,OAAQ,mBACRC,QAAS,qBAAK3K,UAAU,qBAAf,SACL,+BACI,kEACA,8HAKZ4K,EAAG,CACCF,OAAQ,mBACRC,QAAS,qBAAK3K,UAAU,qBAAf,SACL,+BACI,2FACA,mFAIZ6K,EAAG,CACCH,OAAQ,mBACRC,QAAS,qBAAK3K,UAAU,qBAAf,SACL,6BACI,iEAAmC,uCAAnC,mCAIZ8K,EAAG,CACCJ,OAAQ,mBACRC,QAAS,yBAAS3K,UAAU,qBAAnB,SACL,+BACI,qGACA,+EAIZ+K,EAAG,CACCL,OAAQ,mBACRC,QAAS,qBAAK3K,UAAU,qBAAf,SACL,+BACI,qFACA,mGAQpB,EAAKqK,OAAS,EAAKA,OAAOlK,KAAZ,gBACd,EAAKqK,OAAS,EAAKA,OAAOrK,KAAZ,gBAvDC,E,0CAwEnB,WACI,OAAQ,gCACJ,qBAAKH,UAAU,wCAAf,mBACA,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,iCAAf,SACI,qBAAKC,IAAKJ,KAAKJ,MAAMuI,KAAKnI,KAAKJ,MAAM6K,cAAcI,OAAQ3K,IAAI,kBAEnE,qBAAKC,UAAU,oBAAf,SACKH,KAAKJ,MAAMuI,KAAKnI,KAAKJ,MAAM6K,cAAcK,eAItD,qBAAKlH,SAAU5D,KAAKJ,MAAM6K,eAAiBC,OAAO3J,KAAKf,KAAKJ,MAAMuI,MAAM1F,OAChEtC,UAAU,yDACVE,QAASL,KAAKwK,OAFtB,mBAIA,qBAAK5G,SAAsC,IAA5B5D,KAAKJ,MAAM6K,aAClBtK,UAAU,yDACVE,QAASL,KAAK2K,OAFtB,uBAIA,qBAAKxK,UAAU,yDACPE,QAASL,KAAKC,MAAMkL,aAD5B,0B,GA9FQ1K,IAAMC,WCW1B0K,KAAWC,cAAc,S,IAkPVC,G,kDA/Ob,WAAYrL,GAAQ,IAAD,8BACjB,cAAMA,IAcRsL,mBAAqB,SAACC,GACpB,IAEMC,EAFaD,EAAME,OAAOC,MAEDC,QAAQ,MAAO,IAAIrF,MAAM,EAAG,GAC3D,EAAKlE,SAAS,CACZwJ,WAAYJ,EACZK,QAAgC,IAAvBL,EAAYhJ,UArBN,EAyBnBsJ,sBAzBmB,sBAyBK,sBAAAzD,EAAA,yDACjB,EAAK1I,MAAMkM,QADM,wDAEtB,EAAKzJ,SAAS,CAAE2J,eAAe,IAFT,SAGZ,EAAKC,uBAAuB,EAAKrM,MAAMiM,YAH3B,mDAId,EAAKxJ,SAAS,CAAE2J,eAAe,IAJjB,OAKpB,EAAK/L,MAAMiM,cAAc,KAAM,EAAKtM,MAAMiM,YALtB,yCAOd,EAAKxJ,SAAS,CAAE2J,eAAe,IAPjB,QAQpBvE,QAAQC,IAAI,iCACZ,EAAKyE,iBACH,gBAAkB,EAAKvM,MAAMiM,WAAa,gCAVxB,4CAzBL,EAuCnBO,wBAA0B,SAAClJ,GACzB,EAAKjD,MAAMiM,cAAchJ,IAxCR,EA2CnB+I,uBA3CmB,uCA2CM,WAAOjI,GAAP,eAAAsE,EAAA,sEACAU,IAAMqD,IACH,UAAa7F,EAAa,SAAWxC,EAAS,KAFjD,cACjBsI,EADiB,yBAIhBA,EAASnE,KAAKoE,QAAUD,EAASnE,KAAKqE,aAAa/J,OAAS,GAJ5C,2CA3CN,wDAkDnB0J,iBAAmB,SAACM,GAClB,EAAKpK,SAAS,CAAEqK,aAAcD,IAC9BrI,WAAW,EAAK/B,SAAS/B,KAAd,eAAyB,CAAEoM,aAAc,KAAO,MAlD3D,EAAKC,kBAAoB,EAAKA,kBAAkBrM,KAAvB,gBACzB,EAAKV,MAAQ,CACXgN,WAAW,EACXf,WAAY,GACZC,SAAS,EACTe,aAAa,EACbH,aAAc,IARC,E,qDAWnB,WACE1M,KAAKqC,SAAS,CAAEuK,WAAY5M,KAAKJ,MAAMgN,c,oBA2CzC,WACE,OACE,sBAAKzM,UAAU,+BAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,2CAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,qBAAKA,UAAU,QAAf,4BACA,qBAAKA,UAAU,WAAf,0EAQTH,KAAKJ,MAAM8M,aACV,qBAAKvM,UAAU,mBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,8BAAMH,KAAKJ,MAAM8M,yBAO3B,wBAGF,qBAAKvM,UAAU,oBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,0BAASA,UAAU,uCAAnB,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,QAAf,gCAEF,sBACEA,UAAU,sCACVE,QAASL,KAAK2M,kBAFhB,UAIE,sBAAMG,KAAK,MAAMC,aAAW,OAA5B,0BAEQ,IANV,gBASA,sBACE5M,UAAU,sCACVE,QAASL,KAAKC,MAAM+M,kBAAkB1M,KAAKN,KAAM,WAFnD,UAIE,sBAAM8M,KAAK,MAAMC,aAAW,UAA5B,gCAJF,gCAYH7F,GACC,qBAAK/G,UAAU,kBAAf,SACE,0BAASA,UAAU,wCAAnB,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,QAAf,4BAEDuG,EACC,sBACEvG,UAAU,uCACVE,QAASL,KAAKC,MAAM+M,kBAAkB1M,KAAKN,KAAM,QAFnD,UAIE,sBAAM8M,KAAK,MAAMC,aAAW,OAA5B,0BAEQ,IANV,UAUA,wBAEDnG,EACC,sBACEzG,UAAU,uCACVE,QAASL,KAAKC,MAAM+M,kBAAkB1M,KACpCN,KACA,UAJJ,UAOE,sBAAM8M,KAAK,MAAMC,aAAW,SAA5B,0BAEQ,IATV,YAaA,wBAEDjG,EACC,sBACE3G,UAAU,uCACVE,QAASL,KAAKC,MAAM+M,kBAAkB1M,KAAKN,KAAM,QAFnD,UAIE,sBAAM8M,KAAK,MAAMC,aAAW,OAA5B,0BAEQ,IANV,UAUA,wBAEArG,GACDE,GACAE,EAOC,wBANA,sBAAK3G,UAAU,QAAf,UACG,IACD,uBAFF,sDAWN,wBAGD6G,GACC,qBAAK7G,UAAU,kBAAf,SACE,0BAASA,UAAU,qCAAnB,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,QAAf,kCAEF,sBACEA,UAAU,oCACVE,QAASL,KAAKoM,wBAAwB9L,KAAKN,KAAM,GAFnD,UAIE,sBAAM8M,KAAK,MAAMC,aAAW,SAA5B,0BAEQ,IANV,mBASA,uBACA,uBACE5M,UAAU,4BACV8C,KAAK,OACLgK,YAAY,oBACZtB,MAAO3L,KAAKJ,MAAMiM,WAClBqB,SAAUlN,KAAKuL,qBAEjB,sBACEpL,WACGH,KAAKJ,MAAMoM,cAAgB,cAAgB,IAC5C,oCAEFpI,UAAW5D,KAAKJ,MAAMkM,QACtBzL,QAASL,KAAK+L,sBAAsBzL,KAAKN,MAN3C,UAQE,sBAAM8M,KAAK,MAAMC,aAAW,SAA5B,gCAEQ,IAVV,uBAgBJ,6BAKN,cAAC,KAAD,CACEI,OAAQnN,KAAKJ,MAAMgN,UACnBQ,eAAgBpN,KAAK2M,kBACrBxM,UAAU,cACVkN,iBAAiB,UACjBC,wBAAwB,EAL1B,SAOE,cAAC,GAAD,CAAOnC,aAAcnL,KAAK2M,6B,GAzOjBlM,IAAMC,WCcV6M,G,4JA1BX,WACI,OACI,wBAAQpN,UAAU,mBAAlB,SACI,sBAAKA,UAAU,4BAAf,UACI,4CACe,mBAAGqN,KAAK,wBAAR,6BADf,2BAEI,mBAAGA,KAAK,iDAAR,kBAFJ,eAIA,8BACI,mBAAGA,KAAK,8CAAR,6BADJ,MAEI,mBAAGA,KAAK,0CAAR,6BAFJ,MAGI,mBAAGA,KAAK,uCAAR,8C,GAbH/M,IAAMC,WCgEZ+M,G,kDA3DX,WAAYxN,GAAQ,IAAD,8BACf,cAAMA,IAOVyN,iBAAmB,SAACC,GAChB,EAAKtL,SAAS,CAACuL,WAAYD,KATZ,EAYnBE,iBAAmB,SAAC3K,EAAMc,GACtB,EAAK3B,SAAS,CACVuL,WAAY,SACZ1K,KAAMA,EACNc,OAAQA,KAhBG,EAoBnB8J,gBAAkB,WACd,EAAKzL,SAAS,CAACuL,WAAY,UAnB3B,EAAKhO,MAAQ,CAACgO,WAAY,QAC1B,EAAKE,gBAAkB,EAAKA,gBAAgBxN,KAArB,gBACvB,EAAKoN,iBAAmB,EAAKA,iBAAiBpN,KAAtB,gBAJT,E,0CAwBnB,WACI,IACIwK,EACJ,OAFmB9K,KAAKJ,MAAMgO,YAG1B,IAAK,OACD9C,EAAU,cAAC,GAAD,CAAMkC,kBAAmBhN,KAAK0N,iBAAkBxB,cAAelM,KAAK6N,mBAC9E,MACJ,IAAK,OACD/C,EAAU,cAAC,GAAD,CAAM7H,KAAK,KAAKsE,OAAO,OAAOrE,KAAM,EAAGR,YAAa1C,KAAK8N,kBACnE,MACJ,IAAK,SACDhD,EAAU,cAAC,GAAD,CAAM7H,KAAK,KAAKsE,OAAO,SAASrE,KAAM,EAAGR,YAAa1C,KAAK8N,kBACrE,MACJ,IAAK,OACDhD,EAAU,cAAC,GAAD,CAAM7H,KAAK,KAAKsE,OAAO,OAAOrE,KAAM,EAAGR,YAAa1C,KAAK8N,kBACnE,MACJ,IAAK,SACDhD,EAAU,cAAC,GAAD,CAAM7H,KAAK,SAASe,OAAQhE,KAAKJ,MAAMoE,OAAQd,KAAMlD,KAAKJ,MAAMsD,KAAMR,YAAa1C,KAAK8N,kBAClG,MACJ,IAAK,UACDhD,EAAU,cAAC,GAAD,CAAM7H,KAAK,UAAUC,KAAM,EAAGR,YAAa1C,KAAK8N,kBAC1D,MACJ,QACIhD,EAAU,cAAC,GAAD,CAAMkC,kBAAmBhN,KAAK0N,iBAAkBxB,cAAelM,KAAK6N,mBAGtF,OACI,gCACK/C,EACD,cAAC,GAAD,W,GAvDErK,IAAMC,WCOJqN,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBtK,WACrBA,UAAUuK,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ef3ca63b.chunk.js","sourcesContent":["\nfunction resolveImagePath(state) {\n    let path = \"/img/\";\n    switch (state) {\n        case 0: path += \"empty.png\"; break;\n        case 1: path += \"blueActive.png\"; break;\n        case 2: path += \"blueBase.png\"; break;\n        case -1: path += \"redActive.png\"; break;\n        case -2: path += \"redBase.png\"; break;\n        default: path += \"empty.png\"; break;\n\n    }\n    return path;\n}\n\nexport default resolveImagePath","import React from \"react\";\nimport resolveImagePath from \"../utils/styleUtils\"\n\nclass Cell extends React.Component {\n    render() {\n        const img_path = resolveImagePath(this.props.state);\n        return (\n            <img alt=\"cell\" className=\"cell\" src={img_path}\n                 onClick={this.props.onClick.bind(this, this.props.h, this.props.w)}/>\n        )\n    }\n}\nclass FieldRow extends React.Component {\n    render() {\n        const row = [...Array(this.props.size).keys()].map(number => {\n            const h = this.props.N;\n            const w = number;\n            const key = h * this.props.size + w;\n            let state = this.props.field[key];\n            return <Cell h={h} w={w} key={key}\n                         onClick={this.props.onCellClick}\n                         state={state}/>\n        });\n        return (\n            <div className=\"field-row\">\n                {row}\n            </div>\n        );\n    }\n\n\n\n}\n\nclass Field extends React.Component {\n\n    render() {\n        this.fieldElement = [...Array(this.props.sizeH).keys()].map(number => {\n            return <FieldRow size={this.props.sizeW} N={number} key={number}\n                             onCellClick={this.props.onCellClick} field={this.props.field}/>\n        });\n        return (\n            <div className=\"game-field\">\n                    {this.fieldElement}\n            </div>\n        )\n    }\n}\n\nexport default Field\n\n","import React, { Component } from \"react\";\nimport resolveImagePath from \"../utils/styleUtils\";\n\nclass TeamName extends React.Component {\n  render() {\n    const className =\n      \"team-name \" + (this.props.id === 1 ? \"blue-name\" : \"red-name\");\n    return (\n      <span className={className}>{this.props.id === 1 ? \"Blue\" : \"Red\"}</span>\n    );\n  }\n}\n\nclass MoveDot extends React.Component {\n  render() {\n    return <img alt=\"cell\" className={this.props.class} src={this.props.img} />;\n  }\n}\n\nclass MovesBar extends React.Component {\n  render() {\n    const img_path = resolveImagePath(this.props.id);\n    const empty = resolveImagePath(0);\n    const className =\n      \"move-dot \" + (this.props.id === 1 ? \"blue-name\" : \"red-name\");\n\n    return (\n      <div>\n        <MoveDot img={this.props.n > 2 ? img_path : empty} class={className} />\n        <MoveDot img={this.props.n > 1 ? img_path : empty} class={className} />\n        <MoveDot img={this.props.n > 0 ? img_path : empty} class={className} />\n      </div>\n    );\n  }\n}\n\nclass MenuButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      clicked: false,\n    };\n    this.pressed = this.pressed.bind(this);\n  }\n\n  pressed() {\n    this.setState({ clicked: !this.state.clicked });\n  }\n\n  render() {\n    if (\n      this.props.gameState.isGameEnded ||\n      this.props.gameState.history.length === 0\n    ) {\n      return (\n        <div>\n          <div\n            className=\"button sidebar-button button-on-info\"\n            onClick={this.props.onMenuClick}\n          >\n            Menu\n          </div>\n        </div>\n      );\n    }\n    if (this.state.clicked) {\n      return (\n        <div>\n          <div className=\"info-line\">\n            Your game would be lost You sure you want to exit?\n          </div>\n          <div className=\"columns\">\n            <span\n              className=\"column button sidebar-button button-on-info\"\n              onClick={this.props.onMenuClick}\n            >\n              Yes\n            </span>\n            <span\n              className=\"column button sidebar-button button-on-info\"\n              onClick={this.pressed}\n            >\n              No\n            </span>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div\n            className=\"button sidebar-button button-on-info\"\n            onClick={this.pressed}\n          >\n            Menu\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nclass Hint extends React.Component {\n  render() {\n    const sl = this.props.gameState.stepsLeft;\n    const tm = this.props.gameState.toMove;\n    if (this.props.gameState.isGameEnded) {\n      return (\n        <div>\n          <div className=\"info-line\">\n            Team <TeamName id={this.props.gameState.winner} /> won!\n          </div>\n        </div>\n      );\n    } else {\n      if (this.props.type === \"offline\" || tm === this.props.gameState.team) {\n        return (\n          <div>\n            {this.props.type === \"offline\" ? (\n              <div className=\"info-line\">\n                <TeamName id={this.props.gameState.toMove} /> moves\n              </div>\n            ) : (\n              <div className=\"info-line\">Your move</div>\n            )}\n            <div className=\"info-line\">\n              {\" \"}\n              {sl} step{sl === 1 ? \"\" : \"s\"} left\n            </div>\n            <div className=\"info-line\">\n              <MovesBar n={sl} id={tm} />\n            </div>\n          </div>\n        );\n      } else {\n        // it's not offline game and our opponent is thinking now\n        return <div className=\"info-line\">Oponents move</div>;\n      }\n    }\n  }\n}\n\nclass RollBackButton extends React.Component {\n  render() {\n    if (this.props.shouldShow) {\n      return (\n        <div\n          className=\"button sidebar-button button-on-info\"\n          onClick={this.props.onRollBack}\n        >\n          TakeBack\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nclass PlayAgainButton extends React.Component {\n  render() {\n    const text = this.props.isGameCompleted ? \"Play Again\" : \"Resign\";\n    const isEnabled =\n      this.props.isBackendConnected && this.props.isOpponentConnected;\n    if (this.props.shouldShow) {\n      return (\n        <div\n          className=\"button sidebar-button button-on-info\"\n          disabled={!isEnabled}\n          onClick={this.props.onPlayAgain}\n        >\n          {text}\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nclass RoomId extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      copied: false,\n    };\n  }\n  render() {\n    if (this.props.type === \"online\") {\n      return (\n        <div>\n          <span className=\"tags has-addons\">\n            <span className=\"tag is-light is-large \">\n              Room # <code> {this.props.roomId}</code>\n            </span>\n            <button\n              className=\"tag is-large button\"\n              onClick={() => {\n                navigator.clipboard.writeText(this.props.roomId);\n                this.setState({ copied: true });\n                setTimeout(() => this.setState({ copied: false }), 3000);\n              }}\n            >\n              📋\n            </button>\n            {this.state.copied ? \"Copied\" : \"\"}\n          </span>\n        </div>\n      );\n    }\n    return <div />;\n  }\n}\n\nclass ConnectionStatus extends React.Component {\n  render() {\n    if (this.props.type === \"offline\") {\n      return <div />;\n    }\n\n    const lightClassBackend = this.props.isBackendConnected ? \"green\" : \"red\";\n    const lightClassOpponent = this.props.isOpponentConnected ? \"green\" : \"red\";\n\n    let backend = (\n      <span>\n        <span className={lightClassBackend + \" dot\"} /> backend is{\" \"}\n        {this.props.isBackendConnected ? \"\" : \"not \"}connected\n      </span>\n    );\n\n    let opponent =\n      this.props.type === \"online\" ? (\n        <span>\n          <span className={lightClassOpponent + \" dot\"} /> opponent is{\" \"}\n          {this.props.isOpponentConnected ? \"\" : \"not \"}connected\n        </span>\n      ) : (\n        <span />\n      );\n\n    return (\n      <div className=\"connection-status\">\n        {backend}\n        <br />\n        {opponent}\n      </div>\n    );\n  }\n}\n\nclass InfoBar extends Component {\n  render() {\n    return (\n      <div>\n        <ConnectionStatus\n          isBackendConnected={this.props.gameState.isBackendConnected}\n          isOpponentConnected={this.props.gameState.isOpponentConnected}\n          type={this.props.type}\n        />\n        <RoomId\n          roomId={this.props.gameState.roomId}\n          type={this.props.type}\n        ></RoomId>\n        <br />\n        <div className=\"has-text-centered\">\n          <Hint gameState={this.props.gameState} type={this.props.type} />\n          <RollBackButton\n            onRollBack={this.props.onRollBack}\n            shouldShow={this.props.type === \"offline\"}\n          />\n          <PlayAgainButton\n            onPlayAgain={this.props.onPlayAgain}\n            shouldShow={this.props.type === \"online\"}\n            isGameCompleted={this.props.gameState.isGameEnded}\n            isBackendConnected={this.props.gameState.isBackendConnected}\n            isOpponentConnected={this.props.gameState.isOpponentConnected}\n          />\n          <MenuButton\n            gameState={this.props.gameState}\n            onMenuClick={this.props.onMenuClick}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InfoBar;\n","let hw2Index = function (h, w, maxW) {\n    return h * maxW + w;\n};\n\nlet index2W = function (index, maxW) {\n    return index % maxW;\n};\n\nlet index2H = function (index, maxW) {\n    return Math.floor(index / maxW);\n};\n\n\nlet getAllNeibours = function (h, w, maxH, maxW) {\n    let result = [];\n    if (h > 0) {\n        result.push(hw2Index(h - 1, w, maxW));\n        if (w > 0) {\n            result.push(hw2Index(h - 1, w - 1, maxW))\n        }\n    }\n\n\n    if (h < maxH - 1) {\n        result.push(hw2Index(h + 1, w, maxW));\n        if (w < maxW - 1) {\n            result.push(hw2Index(h + 1, w + 1, maxW))\n        }\n    }\n\n    if (w > 0) {\n        result.push(hw2Index(h, w - 1, maxW));\n        if (h < maxH - 1) {\n            result.push(hw2Index(h + 1, w - 1, maxW))\n        }\n    }\n\n    if (w < maxW - 1) {\n        result.push(hw2Index(h, w + 1, maxW));\n        if (h > 0) {\n            result.push(hw2Index(h - 1, w + 1, maxW))\n        }\n    }\n    return result;\n};\n\nlet isActiveNow = function (h, w, state, seen) {\n    const index = hw2Index(h, w, state.sizeW);\n    if (seen.indexOf(index) > -1) {\n        return false;\n    }\n    seen.push(index);\n    if (state.field[index] === state.toMove) {\n        return true;\n    }\n    if (state.field[index] === state.toMove * 2) {\n        return getAllNeibours(h, w, state.sizeH, state.sizeW).map(\n            (neibIndex) =>\n                isActiveNow(index2H(neibIndex, state.sizeW), index2W(neibIndex, state.sizeW), state, seen)).some(\n            (x) => x);\n    }\n\n    return false;\n};\n\nlet isStepPossible =  function(cellState, toMove){\n    if(cellState === 0){\n        return true;\n    }else{\n        return (toMove ===  -cellState)\n    }\n};\n\nconst isStepValid = function (state, h, w) {\n    if (!isStepPossible(state.field[hw2Index(h,w,state.sizeW)], state.toMove)){\n        return  false;\n    }\n\n    const neibours = getAllNeibours(h, w, state.sizeH, state.sizeW);\n    let seen = [];\n    return neibours.map((neibIndex) =>\n        isActiveNow(index2H(neibIndex, state.sizeW), index2W(neibIndex, state.sizeW), state, seen)).some(\n            (x) => x);\n};\n\n\nconst getNextState = function (currentState, toMove) {\n    if (currentState === 0) {\n        return toMove;\n    } else {\n        return -currentState + toMove\n    }\n};\n\nconst isValidMoveExists  = function (state) {\n    let tmp_state = {...state};\n    for(let i = 0; i<3; i++){\n        let found = false;\n        for(let k=0; k<tmp_state.sizeW*tmp_state.sizeH; k++){\n            if (isStepValid(tmp_state, index2H(k, tmp_state.sizeW),index2W(k, tmp_state.sizeW))){\n                found = true;\n                let stepped_field = tmp_state.field.slice();\n                stepped_field[k] = getNextState(stepped_field[k], tmp_state.toMove);\n                tmp_state.field = stepped_field;\n                break;\n            }\n        }\n        if (!found){\n            return false\n        }\n    }\n    return true\n};\n\nexport {isStepValid, getNextState, isValidMoveExists};\n\n","export const SERVER_URL = process.env.REACT_APP_SERVER_URL;\nexport const USE_SSL = process.env.REACT_APP_USE_SSL === \"true\";\n\nexport const EASY_AI_ENABLED = process.env?.REACT_APP_EASY_AI_ENABLED ?? false;\nexport const MEDIUM_AI_ENABLED = process.env?.REACT_APP_MEDIUM_AI_ENABLED ?? false;\nexport const HARD_AI_ENABLED = process.env?.REACT_APP_HARD_AI_ENABLED ?? false;\nexport const ONLINE_MODE_ENABLED = process.env?.REACT_APP_ONLINE_MODE_ENABLED ?? false;\n\nexport const ANY_AI_ENABLED = EASY_AI_ENABLED || MEDIUM_AI_ENABLED || HARD_AI_ENABLED","import React from \"react\";\nimport axios from \"axios\";\nimport Field from \"./Field\";\nimport InfoBar from \"./InfoBar\";\nimport {\n  isStepValid,\n  getNextState,\n  isValidMoveExists,\n} from \"../utils/gameEngine\";\nimport { SERVER_URL, USE_SSL } from \"../utils/constants\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.sizeH = 8;\n    this.sizeW = 8;\n    let field = new Array(this.sizeH * this.sizeW).fill(0);\n    field[0] = 1;\n    field[this.sizeH * this.sizeW - 1] = -1;\n    this.state = {\n      field: field,\n      toMove: 1,\n      stepsLeft: 2,\n      sizeH: this.sizeH,\n      sizeW: this.sizeW,\n      history: [],\n      isGameEnded: false,\n      winner: null,\n      isBackendConnected: false,\n      isOpponentConnected: false,\n      team: props.team,\n      roomId: props.roomId,\n    };\n    this.handleCellClick = this.handleCellClick.bind(this);\n    this.handleRollBack = this.handleRollBack.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.props.type === \"offline\") return;\n    await this.setUpSocket();\n  }\n\n  setUpSocket = () => {\n    let url;\n    const protocol = USE_SSL ? \"wss://\" : \"ws://\";\n    if (this.props.type === \"ai\") {\n      url = protocol + SERVER_URL + \"/ws/ai/\" + this.props.aiType + \"/\";\n    }\n    this.timeouts = [];\n    if (this.props.type === \"online\") {\n      url =\n        protocol +\n        SERVER_URL +\n        \"/ws/room/\" +\n        (this.state.roomId || \"\") +\n        \"?team=\" +\n        this.state.team;\n    }\n    console.log(\"connecting to the backend\", url);\n    this.socket = new WebSocket(url);\n    this.socket.onopen = () => {\n      this.setState({ isBackendConnected: true });\n      console.log(\"backend connected\");\n    };\n    this.socket.onmessage = (msg) => {\n      this.handleSocketData(JSON.parse(msg.data));\n    };\n    this.socket.onclose = (msg) => {\n      console.log(\n        \"Connection unexpectedly closed with code:\",\n        msg.code,\n        \"retrying in two secconds\"\n      );\n      this.setState({ isBackendConnected: false });\n      this.timeouts.push(\n        setTimeout(() => {\n          this.setUpSocket();\n        }, 2000)\n      );\n    };\n  };\n\n  async componentWillUnmount() {\n    console.log(\"unmounting, closing socket\");\n    if (this.socket) {\n      // remove reconnection logic before intentional socket termination.\n      this.socket.onclose = null;\n      await this.socket.close();\n      this.timeouts.forEach(clearTimeout);\n    }\n  }\n\n  handleSocketData = async (data) => {\n    console.log(\"handling received data\", data);\n    if (data[\"type\"] === \"move\") {\n      await this.handleReceivedMove(data);\n    }\n    if (data[\"type\"] === \"stateUpdate\") {\n      await this.setState(data[\"state\"]);\n    }\n    if (data[\"type\"] === \"resetState\") {\n      await this.resetStateFromField(data);\n    }\n    if (data[\"type\"] === \"error\") {\n      // If received error from backend, thorw back to menu\n      await this.props.onMenuClick();\n    }\n  };\n\n  handleReceivedMove(data) {\n    if (this.state.toMove === this.state.team || this.state.isGameEnded) {\n      throw new Error(\"move received when not expected\");\n    }\n    let move = data.move;\n    if (move.length > this.state.stepsLeft) {\n      throw new Error(\"More moves than possible\");\n    }\n    move.forEach(async (step) => {\n      if (isStepValid(this.state, step[0], step[1])) {\n        await this.makeStep(step[0], step[1]);\n      }\n    });\n  }\n\n  handleRollBack = () => {\n    if (this.state.history.length === 0 || this.props.type !== \"offline\") {\n      // Initial state. Nothing to roll back\n      return;\n    }\n    const history = this.state.history.slice();\n    const field = this.state.field.slice();\n    let toMove = this.state.toMove;\n    let stepsLeft = this.state.stepsLeft + 1;\n    let isGameEnded = this.state.isGameEnded;\n    let winner = this.state.winner;\n\n    const move = history.pop();\n    const currState = field[move[0] * this.sizeW + move[1]]; // Hope it is not 0 (that would cause an error, but should be impossible)\n    // Next state is 1 for -2 and 0 for (1, -1) so it is opposite sign and smaller modulo\n    field[move[0] * this.sizeW + move[1]] =\n      -Math.sign(currState) * (Math.abs(currState) - 1);\n\n    if (stepsLeft > 3) {\n      // We tried to roll back when stepsLeft ==  3 --> after roll back different team moves and has last move.\n      toMove = -toMove;\n      stepsLeft = 1;\n      // in this case we may have game end in place.\n      if (isGameEnded) {\n        isGameEnded = false;\n        winner = null;\n      }\n    }\n\n    this.setState({\n      field: field,\n      toMove: toMove,\n      stepsLeft: stepsLeft,\n      history: history,\n      isGameEnded: isGameEnded,\n      winner: winner,\n    });\n  };\n\n  handlePlayAgain = async () => {\n    if (this.props.type !== \"online\") return;\n    // Server should restart it's internal state and then send requests to reset state on clients\n    await axios.post(\n      (USE_SSL ? \"https://\" : \"http://\") +\n        SERVER_URL +\n        \"/room/\" +\n        this.state.roomId +\n        \"/restart\"\n    );\n  };\n\n  handleCellClick = async (h, w) => {\n    const playerCantMoveNow =\n      this.state.toMove !== this.state.team && this.props.type !== \"offline\";\n    // We won't allow clicking on the field if opponent is not connected and game is not fully ready.\n    const onlineGameNotReady =\n      this.props.type === \"online\" &&\n      (!this.state.isBackendConnected || !this.state.isOpponentConnected);\n    if (\n      playerCantMoveNow ||\n      onlineGameNotReady ||\n      this.state.isGameEnded ||\n      !isStepValid(this.state, h, w)\n    ) {\n      return;\n    }\n    await this.makeStep(h, w);\n    if (this.props.type === \"ai\") {\n      await this.sendStateToAiIfNeeded();\n    }\n    if (this.props.type === \"online\") {\n      await this.sendMoveToOpponent(h, w);\n    }\n  };\n\n  makeStep = async (h, w) => {\n    const field = this.state.field.slice();\n    const history = this.state.history.slice();\n    let stepsLeft = this.state.stepsLeft - 1;\n    let toMove = this.state.toMove;\n\n    let winner = this.state.winner;\n    let isGameEnded = this.state.isGameEnded;\n\n    field[h * this.sizeW + w] = getNextState(\n      field[h * this.sizeW + w],\n      this.state.toMove\n    );\n    history.push([h, w]);\n\n    // Switch move\n    if (stepsLeft === 0) {\n      toMove = -toMove;\n      stepsLeft = 3;\n\n      //check  if game ended:\n      let new_state = { ...this.state };\n      new_state.field = field.slice();\n      new_state.history = history.slice();\n      new_state.stepsLeft = stepsLeft;\n      new_state.toMove = toMove;\n\n      if (!isValidMoveExists(new_state)) {\n        //end game\n        isGameEnded = true;\n        winner = -toMove;\n      }\n    }\n\n    return await this.setState({\n      toMove: toMove,\n      field: field,\n      stepsLeft: stepsLeft,\n      history: history,\n      isGameEnded: isGameEnded,\n      winner: winner,\n    });\n  };\n\n  sendStateToAiIfNeeded = async () => {\n    //  don't call it on invalid or not on time moves.\n    const aiMoves = this.state.team !== this.state.toMove;\n    if (aiMoves && !this.state.isGameEnded) {\n      if (this.state.isBackendConnected) {\n        await this.socket.send(JSON.stringify(this.state));\n        console.log(\"state sent for ai game\");\n      } else {\n        console.log(\"state not sent, retrying in two seconds\");\n        this.timeouts.push(\n          setTimeout(() => {\n            this.sendStateIfNeeded();\n          }, 2000)\n        );\n      }\n    }\n  };\n  sendMoveToOpponent = async (h, w) => {\n    await this.socket.send(\n      JSON.stringify({\n        type: \"move\",\n        move: [[h, w]],\n        state: this.state,\n      })\n    );\n    console.log(\"state move and updated state to opponent\");\n  };\n\n  resetStateFromField = async (data) => {\n    const field = data[\"field\"];\n    let winner = null;\n    let isGameEnded = false;\n    // number of moves made = abs value in all cells -2 for initial seed cells\n    const movesMade = field.map(Math.abs).reduce((x, y) => x + y, 0) - 2;\n    const history = this.state.history.slice(0, movesMade);\n    const toMove = Math.floor((movesMade + 1) / 3) % 2 === 0 ? 1 : -1;\n    const stepsLeft = 3 - ((movesMade + 1) % 3);\n    const newState = {\n      history: history,\n      field: field,\n      toMove: toMove,\n      stepsLeft: stepsLeft,\n    };\n    console.log(newState);\n    if (!isValidMoveExists({ ...this.state, ...newState })) {\n      //end game\n      isGameEnded = true;\n      winner = -toMove;\n    }\n    this.setState({\n      ...newState,\n      isGameEnded: isGameEnded,\n      winner: winner,\n    });\n  };\n\n  getInfoBarColor = () => {\n    return this.state.team === 1 ? \"info-background\" : \"danger-background\";\n  };\n\n  render() {\n    return (\n      <div className=\"container is-fluid game-container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent is-8\">\n            <div className=\"tile is-child is-game-tile\">\n              <Field\n                sizeH={this.sizeH}\n                sizeW={this.sizeW}\n                onCellClick={this.handleCellClick}\n                field={this.state.field}\n              />\n            </div>\n          </div>\n          <div className=\"tile is-parent\">\n            <div\n              className={\"tile is-child is-info-bar \" + this.getInfoBarColor()}\n            >\n              <InfoBar\n                onMenuClick={this.props.onMenuClick}\n                onRollBack={this.handleRollBack}\n                onPlayAgain={this.handlePlayAgain}\n                gameState={this.state}\n                type={this.props.type}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\n\n\nclass Rules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentSlide: 1,\n            data: {\n                1: {\n                    imgSrc: \"/img/rules/1.png\",\n                    element: <div className=\"rules-text content\">\n                        <ul>\n                            <li>Two players play on square grid.</li>\n                            <li>Each player can make 3 steps on a cell near his active dots (viruses) during his turn.\n                            </li>\n                        </ul>\n                    </div>\n                },\n                2: {\n                    imgSrc: \"/img/rules/2.png\",\n                    element: <div className=\"rules-text content\">\n                        <ul>\n                            <li>If you make a step on opponents virus, you create a base.</li>\n                            <li>Each base can either be active or inactive.</li>\n                        </ul>\n                    </div>\n                },\n                3: {\n                    imgSrc: \"/img/rules/3.png\",\n                    element: <div className=\"rules-text content\">\n                        <ul>\n                            <li>Any base, that have a virus or <b>active</b> base near it is active.</li>\n                        </ul>\n                    </div>\n                },\n                4: {\n                    imgSrc: \"/img/rules/4.png\",\n                    element: <content className=\"rules-text content\">\n                        <ul>\n                            <li>You can make steps on cells that are near viruses, or active bases.</li>\n                            <li>Inactive bases can not produce viruses.</li>\n                        </ul>\n                    </content>\n                },\n                5: {\n                    imgSrc: \"/img/rules/5.png\",\n                    element: <div className=\"rules-text content\">\n                        <ul>\n                            <li>Player that can not make a legal 3-step move loses.</li>\n                            <li>That's it! What the winning move for white would be here?</li>\n                        </ul>\n                    </div>\n                }\n\n            }\n        };\n\n        this.onNext = this.onNext.bind(this);\n        this.onPrev = this.onPrev.bind(this);\n    }\n\n    onNext = () => {\n        if (this.state.currentSlide === Object.keys(this.state.data).length) {\n            return\n        }\n        this.setState({currentSlide: this.state.currentSlide + 1})\n    };\n\n    onPrev = () => {\n        if (this.state.currentSlide === 1) {\n            return\n        }\n        this.setState({currentSlide: this.state.currentSlide - 1})\n    };\n\n    render() {\n        return (<div>\n            <div className=\"has-text-centered rules-title is-bold\">Rules</div>\n            <div className=\"container\">\n                <div className=\"columns\">\n                    <div className=\"column is-5-tablet rules-image\">\n                        <img src={this.state.data[this.state.currentSlide].imgSrc} alt=\"screen shot\"/>\n                    </div>\n                    <div className=\"column rules-text\">\n                        {this.state.data[this.state.currentSlide].element}\n                    </div>\n                </div>\n            </div>\n            <div disabled={this.state.currentSlide === Object.keys(this.state.data).length}\n                    className=\"button rules-button rules-next-button button-on-danger\"\n                    onClick={this.onNext}> Next\n            </div>\n            <div disabled={this.state.currentSlide === 1}\n                    className=\"button rules-button rules-prev-button button-on-danger\"\n                    onClick={this.onPrev}> Previous\n            </div>\n            <div className=\"button rules-button rules-back-button button-on-danger\"\n                    onClick={this.props.onCloseClick}>Close\n            </div>\n        </div>)\n    }\n}\n\nexport default Rules","import React from \"react\";\nimport ReactModal from \"react-modal\";\nimport Rules from \"./Rules\";\nimport axios from \"axios\";\nimport {\n  SERVER_URL,\n  USE_SSL,\n  ANY_AI_ENABLED,\n  EASY_AI_ENABLED,\n  MEDIUM_AI_ENABLED,\n  HARD_AI_ENABLED,\n  ONLINE_MODE_ENABLED,\n} from \"../utils/constants\";\n\nReactModal.setAppElement(\"#root\");\n\nclass Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleToggleRules = this.handleToggleRules.bind(this);\n    this.state = {\n      showRules: false,\n      roomToJoin: \"\",\n      canJoin: false,\n      joinLoading: false,\n      notification: \"\",\n    };\n  }\n  handleToggleRules() {\n    this.setState({ showRules: !this.state.showRules });\n  }\n\n  handleRoomIdChange = (event) => {\n    const proposedId = event.target.value;\n    // Remove non digits and trim to 4 chars\n    const validatedId = proposedId.replace(/\\D/g, \"\").slice(0, 4);\n    this.setState({\n      roomToJoin: validatedId,\n      canJoin: validatedId.length === 4,\n    });\n  };\n\n  handleJoinOnlineClick = async () => {\n    if (!this.state.canJoin) return; // not in format\n    this.setState({ isJoinLoading: true });\n    if (await this.checkIfRoomCanBeJoined(this.state.roomToJoin)) {\n      await this.setState({ isJoinLoading: false });\n      this.props.onOnlineClick(null, this.state.roomToJoin);\n    } else {\n      await this.setState({ isJoinLoading: false });\n      console.log(\"there is no room with this id\");\n      this.showNotification(\n        \"Room with id \" + this.state.roomToJoin + \" does not exist 🌚\"\n      );\n    }\n  };\n  handleCreateOnlineClick = (team) => {\n    this.props.onOnlineClick(team);\n  };\n\n  checkIfRoomCanBeJoined = async (roomId) => {\n    const response = await axios.get(\n      (USE_SSL ? \"https://\" : \"http://\") + SERVER_URL + \"/room/\" + roomId + \"/\"\n    );\n    return response.data.exists && response.data.teams_joined.length < 2;\n  };\n\n  showNotification = (message) => {\n    this.setState({ notification: message });\n    setTimeout(this.setState.bind(this, { notification: \"\" }), 5000);\n  };\n\n  render() {\n    return (\n      <div className=\"container is-fluid menu-hero\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-parent is-12\">\n              <div className=\"tile is-child notification is-game-title\">\n                <div className=\"has-text-centered\">\n                  <div className=\"title\">Virus War Game</div>\n                  <div className=\"subtitle\">\n                    Two-player game with easy rules and deep strategy\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.notification ? (\n          <div className=\"tile is-ancestor\">\n            <div className=\"tile is-parent\">\n              <div className=\"tile is-parent is-12\">\n                <div className=\"tile is-child notification\">\n                  <div className=\"has-text-centered\">\n                    <div>{this.state.notification}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div />\n        )}\n\n        <div className=\"title is-ancestor\">\n          <div className=\"tile\">\n            <div className=\"tile is-parent \">\n              <article className=\"tile is-child notification is-danger\">\n                <div className=\"has-text-centered\">\n                  <div className=\"title\">Explore the game</div>\n                </div>\n                <div\n                  className=\"button menu-button button-on-danger\"\n                  onClick={this.handleToggleRules}\n                >\n                  <span role=\"img\" aria-label=\"book\">\n                    📖\n                  </span>{\" \"}\n                  Read Rules\n                </div>\n                <div\n                  className=\"button menu-button button-on-danger\"\n                  onClick={this.props.onNavigationClick.bind(this, \"offline\")}\n                >\n                  <span role=\"img\" aria-label=\"offline\">\n                    🗺️\n                  </span>\n                  ‍ Analysis Board\n                </div>\n              </article>\n            </div>\n\n            {ANY_AI_ENABLED ? (\n              <div className=\"tile is-parent \">\n                <article className=\"tile is-child notification is-warning\">\n                  <div className=\"has-text-centered\">\n                    <div className=\"title\">Play With AI</div>\n                  </div>\n                  {EASY_AI_ENABLED ? (\n                    <div\n                      className=\"button menu-button button-on-warning\"\n                      onClick={this.props.onNavigationClick.bind(this, \"easy\")}\n                    >\n                      <span role=\"img\" aria-label=\"easy\">\n                        👶\n                      </span>{\" \"}\n                      Easy\n                    </div>\n                  ) : (\n                    <div />\n                  )}\n                  {MEDIUM_AI_ENABLED ? (\n                    <div\n                      className=\"button menu-button button-on-warning\"\n                      onClick={this.props.onNavigationClick.bind(\n                        this,\n                        \"medium\"\n                      )}\n                    >\n                      <span role=\"img\" aria-label=\"medium\">\n                        🤓\n                      </span>{\" \"}\n                      Medium\n                    </div>\n                  ) : (\n                    <div />\n                  )}\n                  {HARD_AI_ENABLED ? (\n                    <div\n                      className=\"button menu-button button-on-warning\"\n                      onClick={this.props.onNavigationClick.bind(this, \"hard\")}\n                    >\n                      <span role=\"img\" aria-label=\"hard\">\n                        🤖\n                      </span>{\" \"}\n                      Hard\n                    </div>\n                  ) : (\n                    <div />\n                  )}\n                  {!EASY_AI_ENABLED &&\n                  !MEDIUM_AI_ENABLED &&\n                  !HARD_AI_ENABLED ? (\n                    <div className=\"label\">\n                      {\" \"}\n                      <br />\n                      No AI backends are enabled at the moment :(\n                    </div>\n                  ) : (\n                    <div />\n                  )}\n                </article>\n              </div>\n            ) : (\n              <div />\n            )}\n\n            {ONLINE_MODE_ENABLED ? (\n              <div className=\"tile is-parent \">\n                <article className=\"tile is-child notification is-info\">\n                  <div className=\"has-text-centered\">\n                    <div className=\"title\">Play With a Friend</div>\n                  </div>\n                  <div\n                    className=\"button menu-button button-on-info\"\n                    onClick={this.handleCreateOnlineClick.bind(this, 1)}\n                  >\n                    <span role=\"img\" aria-label=\"online\">\n                      🎮\n                    </span>{\" \"}\n                    Create a game\n                  </div>\n                  <hr />\n                  <input\n                    className=\"input is-info menu-button\"\n                    type=\"text\"\n                    placeholder=\"4-digit room code\"\n                    value={this.state.roomToJoin}\n                    onChange={this.handleRoomIdChange}\n                  ></input>\n                  <div\n                    className={\n                      (this.state.isJoinLoading ? \"is-loading \" : \"\") +\n                      \"button menu-button button-on-info\"\n                    }\n                    disabled={!this.state.canJoin}\n                    onClick={this.handleJoinOnlineClick.bind(this)}\n                  >\n                    <span role=\"img\" aria-label=\"online\">\n                      🎟️\n                    </span>{\" \"}\n                    Join by code\n                  </div>\n                </article>\n              </div>\n            ) : (\n              <div />\n            )}\n          </div>\n        </div>\n\n        <ReactModal\n          isOpen={this.state.showRules}\n          onRequestClose={this.handleToggleRules}\n          className=\"rules-modal\"\n          overlayClassName=\"overlay\"\n          shouldFocusAfterRender={false}\n        >\n          <Rules onCloseClick={this.handleToggleRules} />\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React from \"react\";\n\nclass Footer extends React.Component {\n\n    render() {\n        return (\n            <footer className=\"footer my-footer\">\n                <div className=\"content has-text-centered\">\n                    <p>\n                        Created by <a href=\"https://nkorobkov.com\">Nikita Korobkov</a>. Code is licensed under\n                        <a href=\"http://opensource.org/licenses/mit-license.php\"> MIT</a> license.\n                    </p>\n                    <p>\n                        <a href=\"https://github.com/nkorobkov/virus-frontend\">Source Frontend</a> ||\n                        <a href=\"https://github.com/nkorobkov/virus-game\"> Source Backend</a> ||\n                        <a href=\"https://nkorobkov.com/projects/virus\"> Project Description</a>\n                    </p>\n\n                    {/*<p>*/}\n                        {/*Share:*/}\n                        {/*<a href=\"https://github.com/nkorobkov/virus-frontend\">Facebook</a> ||*/}\n                        {/*<a href=\"https://github.com/nkorobkov/virus-game\"> Twitter</a> ||*/}\n                        {/*<a href=\"https://nkorobkov.com/projects/virus\"> Mail</a>*/}\n                    {/*</p>*/}\n                </div>\n            </footer>\n        )\n    }\n}\n\nexport default Footer","import React from 'react';\nimport Game from './components/Game';\nimport Menu from './components/Menu';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {activePage: 'menu'};\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n        this.handleNavigation = this.handleNavigation.bind(this)\n\n    }\n\n    handleNavigation = (page) => {\n        this.setState({activePage: page});\n    };\n\n    handleOnlineGame = (team, roomId) => {\n        this.setState({\n            activePage: 'online',\n            team: team,\n            roomId: roomId,\n        });\n    };\n\n    handleMenuClick = () => {\n        this.setState({activePage: 'menu'});\n    };\n\n    render() {\n        const activePage = this.state.activePage;\n        let element;\n        switch (activePage) {\n            case 'menu':\n                element = <Menu onNavigationClick={this.handleNavigation} onOnlineClick={this.handleOnlineGame}/>;\n                break;\n            case 'easy':\n                element = <Game type='ai' aiType='easy' team={1} onMenuClick={this.handleMenuClick}/>;\n                break;\n            case 'medium':\n                element = <Game type='ai' aiType='medium' team={1} onMenuClick={this.handleMenuClick}/>;\n                break;\n            case 'hard':\n                element = <Game type='ai' aiType='hard' team={1} onMenuClick={this.handleMenuClick}/>;\n                break;\n            case 'online':\n                element = <Game type='online' roomId={this.state.roomId} team={this.state.team} onMenuClick={this.handleMenuClick}/>;\n                break;\n            case 'offline':\n                element = <Game type='offline' team={1} onMenuClick={this.handleMenuClick}/>;\n                break;\n            default:\n                element = <Menu onNavigationClick={this.handleNavigation} onOnlineClick={this.handleOnlineGame}/>;\n                break;\n        }\n        return (\n            <div>\n                {element}\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
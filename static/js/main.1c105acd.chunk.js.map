{"version":3,"sources":["utils/styleUtils.js","components/Field.js","components/InfoBar.js","utils/gameEngine.js","components/Game.js","components/Rules.js","components/OnlineModal.js","components/Menu.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["resolveImagePath","state","path","Cell","img_path","this","props","alt","className","src","onClick","bind","h","w","React","Component","FieldRow","row","Array","size","keys","map","number","N","key","field","onCellClick","Field","fieldElement","sizeH","sizeW","TeamName","id","MoveDot","class","img","MovesBar","empty","n","MenuButton","clicked","pressed","setState","gameState","isGameEnded","history","length","onMenuClick","Hint","sl","stepsLeft","tm","toMove","winner","type","playerTeam","RollBackButton","shouldShow","onRollBack","ConnectionStatus","lightClassBackend","isBackendConnected","lightClassOpponent","backend","opponent","InfoBar","hw2Index","maxW","index2W","index","index2H","Math","floor","getAllNeibours","maxH","result","push","isStepValid","cellState","neibours","seen","neibIndex","isActiveNow","indexOf","some","x","getNextState","currentState","Game","setUpSocket","url","console","log","socket","WebSocket","onopen","onmessage","msg","handleReceivedMove","JSON","parse","data","onclose","code","timeouts","setTimeout","handleRollBack","slice","move","pop","currState","sign","abs","handleCellClick","makeStep","then","sendStateIfNeeded","fill","aiType","close","forEach","clearTimeout","Error","step","a","async","new_state","tmp_state","i","found","k","stepped_field","isValidMoveExists","Promise","resolve","aiMoves","onlineGame","send","stringify","Rules","onNext","currentSlide","Object","onPrev","1","imgSrc","element","2","3","4","5","disabled","onCloseClick","OnlineModal","ReactModal","setAppElement","Menu","handleToggleRules","handleToggleOnline","showRules","showOnline","role","aria-label","onNavigationClick","isOpen","onRequestClose","overlayClassName","shouldFocusAfterRender","createRoom","joinRoom","Footer","href","App","handleNavigation","page","activePage","handleMenuClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c105acd.chunk.js","sourcesContent":["\nfunction resolveImagePath(state) {\n    let path = \"/img/\";\n    switch (state) {\n        case 0: path += \"empty.png\"; break;\n        case 1: path += \"blueActive.png\"; break;\n        case 2: path += \"blueBase.png\"; break;\n        case -1: path += \"redActive.png\"; break;\n        case -2: path += \"redBase.png\"; break;\n        default: path += \"empty.png\"; break;\n\n    }\n    return path;\n}\n\nexport default resolveImagePath","import React from \"react\";\nimport resolveImagePath from \"../utils/styleUtils\"\n\nclass Cell extends React.Component {\n    render() {\n        const img_path = resolveImagePath(this.props.state);\n        return (\n            <img alt=\"cell\" className=\"cell\" src={img_path}\n                 onClick={this.props.onClick.bind(this, this.props.h, this.props.w)}/>\n        )\n    }\n}\nclass FieldRow extends React.Component {\n    render() {\n        const row = [...Array(this.props.size).keys()].map(number => {\n            const h = this.props.N;\n            const w = number;\n            const key = h * this.props.size + w;\n            let state = this.props.field[key];\n            return <Cell h={h} w={w} key={key}\n                         onClick={this.props.onCellClick}\n                         state={state}/>\n        });\n        return (\n            <div className=\"field-row\">\n                {row}\n            </div>\n        );\n    }\n\n\n\n}\n\nclass Field extends React.Component {\n\n    render() {\n        this.fieldElement = [...Array(this.props.sizeH).keys()].map(number => {\n            return <FieldRow size={this.props.sizeW} N={number} key={number}\n                             onCellClick={this.props.onCellClick} field={this.props.field}/>\n        });\n        return (\n            <div className=\"game-field\">\n                    {this.fieldElement}\n            </div>\n        )\n    }\n}\n\nexport default Field\n\n","import React, {Component} from \"react\";\nimport resolveImagePath from \"../utils/styleUtils\";\n\n\nclass TeamName extends React.Component {\n    render() {\n        const className = \"team-name \" + (this.props.id === 1 ? \"blue-name\" : \"red-name\");\n        return (<span className={className}>{this.props.id === 1 ? \"Blue\" : \"Red\"}</span>)\n    }\n}\n\nclass MoveDot extends React.Component {\n    render() {\n\n        return (\n            <img alt=\"cell\" className={this.props.class} src={this.props.img}/>\n        )\n    }\n}\n\nclass MovesBar extends React.Component {\n    render() {\n        const img_path = resolveImagePath(this.props.id);\n        const empty = resolveImagePath(0);\n        const className = \"move-dot \" + (this.props.id === 1 ? \"blue-name\" : \"red-name\");\n\n        return (\n            <div><MoveDot img={this.props.n > 2 ? img_path : empty} class={className}/>\n                <MoveDot img={this.props.n > 1 ? img_path : empty} class={className}/>\n                <MoveDot img={this.props.n > 0 ? img_path : empty} class={className}/></div>\n        )\n    }\n}\n\nclass MenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: false,\n        };\n        this.pressed = this.pressed.bind(this);\n\n    }\n\n    pressed() {\n        this.setState({clicked: !this.state.clicked});\n    };\n\n    render() {\n        if (this.props.gameState.isGameEnded || this.props.gameState.history.length === 0) {\n            return (\n                <div>\n                    <div className=\"button sidebar-button button-on-info\" onClick={this.props.onMenuClick}>Menu</div>\n                </div>\n            )\n        }\n        if (this.state.clicked) {\n            return (\n                <div>\n                    <div className=\"info-line\">Your game would be lost You sure you want to exit?</div>\n                    <div className=\"columns\">\n                    <span className=\"column button sidebar-button button-on-info\"\n                          onClick={this.props.onMenuClick}>Yes</span>\n                        <span className=\"column button sidebar-button button-on-info\" onClick={this.pressed}>No</span>\n\n                    </div>\n\n                </div>\n            )\n        } else {\n            return <div>\n                <div className=\"button sidebar-button button-on-info\" onClick={this.pressed}>Menu</div>\n            </div>\n        }\n    }\n}\n\nclass Hint extends React.Component {\n    render() {\n\n        const sl = this.props.gameState.stepsLeft;\n        const tm = this.props.gameState.toMove;\n        if (this.props.gameState.isGameEnded) {\n            return (<div>\n                    <div className=\"info-line\">Team <TeamName id={this.props.gameState.winner}/> won!</div>\n                </div>\n            )\n        } else {\n            if (this.props.type === 'offline' || tm === this.props.gameState.playerTeam) {\n                return (<div>\n                    {this.props.type === 'offline' ?\n                        <div className=\"info-line\"><TeamName id={this.props.gameState.toMove}/> moves</div>\n                        :\n                        <div className=\"info-line\">It's our move</div>\n                    }\n                    <div className=\"info-line\"> {sl} step{sl === 1 ? '' : 's'} left</div>\n                    <div className=\"info-line\"><MovesBar n={sl} id={tm}/></div>\n                </div>)\n            } else {\n                // it's not offline game and our opponent is thinking now\n                return <div className=\"info-line\">Our opponent is thinking...</div>\n            }\n        }\n\n\n    }\n}\n\nclass RollBackButton extends React.Component {\n    render() {\n        if (this.props.shouldShow) {\n            return (\n                <div className=\"button sidebar-button button-on-info\" onClick={this.props.onRollBack}>TakeBack</div>\n            )\n        }\n        return <div/>\n    }\n}\n\nclass ConnectionStatus extends React.Component {\n    render() {\n        if (this.props.type === 'offline') {\n            return <div/>\n        }\n\n        const lightClassBackend = this.props.isBackendConnected ? 'green' : 'red';\n        const lightClassOpponent = this.props.isBackendConnected ? 'green' : 'red';\n\n        let backend = <span><span\n            className={lightClassBackend + ' dot'}/> backend is {this.props.isBackendConnected ? '' : 'not '}connected</span>\n\n        let opponent = this.props.type === 'online' ?\n            <span><span\n                className={lightClassOpponent + 'dot'}/> opponent is {this.props.isBackendConnected ? '' : 'not '}connected</span> :\n            <span/>;\n\n\n        return (\n            <div className=\"connection-status\">{backend}{opponent}</div>\n        )\n    }\n}\n\nclass InfoBar extends Component {\n\n\n    render() {\n        return (\n            <div>\n                <ConnectionStatus isBackendConnected={this.props.gameState.isBackendConnected} type={this.props.type}/>\n                <div className=\"has-text-centered\">\n                    <Hint gameState={this.props.gameState} type={this.props.type}/>\n                    <RollBackButton onRollBack={this.props.onRollBack} shouldShow={this.props.type === 'offline'}/>\n                    <MenuButton gameState={this.props.gameState} onMenuClick={this.props.onMenuClick}/>\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default InfoBar;","let hw2Index = function (h, w, maxW) {\n    return h * maxW + w;\n};\n\nlet index2W = function (index, maxW) {\n    return index % maxW;\n};\n\nlet index2H = function (index, maxW) {\n    return Math.floor(index / maxW);\n};\n\n\nlet getAllNeibours = function (h, w, maxH, maxW) {\n    let result = [];\n    if (h > 0) {\n        result.push(hw2Index(h - 1, w, maxW));\n        if (w > 0) {\n            result.push(hw2Index(h - 1, w - 1, maxW))\n        }\n    }\n\n\n    if (h < maxH - 1) {\n        result.push(hw2Index(h + 1, w, maxW));\n        if (w < maxW - 1) {\n            result.push(hw2Index(h + 1, w + 1, maxW))\n        }\n    }\n\n    if (w > 0) {\n        result.push(hw2Index(h, w - 1, maxW));\n        if (h < maxH - 1) {\n            result.push(hw2Index(h + 1, w - 1, maxW))\n        }\n    }\n\n    if (w < maxW - 1) {\n        result.push(hw2Index(h, w + 1, maxW));\n        if (h > 0) {\n            result.push(hw2Index(h - 1, w + 1, maxW))\n        }\n    }\n    return result;\n};\n\nlet isActiveNow = function (h, w, state, seen) {\n    const index = hw2Index(h, w, state.sizeW);\n    if (seen.indexOf(index) > -1) {\n        return false;\n    }\n    seen.push(index);\n    if (state.field[index] === state.toMove) {\n        return true;\n    }\n    if (state.field[index] === state.toMove * 2) {\n        return getAllNeibours(h, w, state.sizeH, state.sizeW).map(\n            (neibIndex) =>\n                isActiveNow(index2H(neibIndex, state.sizeW), index2W(neibIndex, state.sizeW), state, seen)).some(\n            (x) => x);\n    }\n\n    return false;\n};\n\nlet isStepPossible =  function(cellState, toMove){\n    if(cellState === 0){\n        return true;\n    }else{\n        return (toMove ===  -cellState)\n    }\n};\n\nconst isStepValid = function (state, h, w) {\n    if (!isStepPossible(state.field[hw2Index(h,w,state.sizeW)], state.toMove)){\n        return  false;\n    }\n\n    const neibours = getAllNeibours(h, w, state.sizeH, state.sizeW);\n    let seen = [];\n    return neibours.map((neibIndex) =>\n        isActiveNow(index2H(neibIndex, state.sizeW), index2W(neibIndex, state.sizeW), state, seen)).some(\n            (x) => x);\n};\n\n\nconst getNextState = function (currentState, toMove) {\n    if (currentState === 0) {\n        return toMove;\n    } else {\n        return -currentState + toMove\n    }\n};\n\nconst isValidMoveExists  = function (state) {\n    let tmp_state = {...state};\n    for(let i = 0; i<3; i++){\n        let found = false;\n        for(let k=0; k<tmp_state.sizeW*tmp_state.sizeH; k++){\n            if (isStepValid(tmp_state, index2H(k, tmp_state.sizeW),index2W(k, tmp_state.sizeW))){\n                found = true;\n                let stepped_field = tmp_state.field.slice();\n                stepped_field[k] = getNextState(stepped_field[k], tmp_state.toMove);\n                tmp_state.field = stepped_field;\n                break;\n            }\n        }\n        if (!found){\n            return false\n        }\n    }\n    return true\n};\n\nexport {isStepValid, getNextState, isValidMoveExists};\n\n","import React from \"react\";\nimport Field from \"./Field\";\nimport InfoBar from \"./InfoBar\"\nimport {isStepValid, getNextState, isValidMoveExists} from \"../utils/gameEngine\";\n\nclass Game extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.sizeH = 8;\n        this.sizeW = 8;\n        let field = new Array(this.sizeH * this.sizeW).fill(0);\n        field[0] = 1;\n        field[this.sizeH * this.sizeW - 1] = -1;\n        this.state = {\n            field: field,\n            toMove: 1,\n            stepsLeft: 2,\n            sizeH: this.sizeH,\n            sizeW: this.sizeW,\n            history: [],\n            isGameEnded: false,\n            winner: null,\n            isBackendConnected: false,\n            playerTeam: 1,\n        };\n        this.handleCellClick = this.handleCellClick.bind(this);\n        this.handleRollBack = this.handleRollBack.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.type === 'ai') {\n            this.setUpSocket('ws://ec2-18-188-144-80.us-east-2.compute.amazonaws.com/ws/ai/' + this.props.aiType + '/');\n        }\n        this.timeouts = [];\n        // if online\n    }\n\n    setUpSocket = (url)=> {\n        console.log('connecting to the backend');\n        this.socket = new WebSocket(url);\n        this.socket.onopen = () => {\n            this.setState({isBackendConnected: true});\n            console.log('backend connected')\n        };\n        this.socket.onmessage = (msg) => {\n            this.handleReceivedMove(JSON.parse(msg.data));\n        };\n        this.socket.onclose = (msg) => {\n            console.log('Cant connect to the server with code:',msg.code,  'retrying in two secconds');\n            this.setState({isBackendConnected: false});\n            this.timeouts.push(setTimeout(()=>{this.setUpSocket(url)}, 2000))\n        };\n    };\n\n    componentWillUnmount() {\n        console.log('unmounting, closing socket');\n        if (this.socket) {\n            // remove reconnection logic before intentional socket termination.\n            this.socket.onclose = null;\n            this.socket.close()\n        }\n        this.timeouts.forEach(clearTimeout);\n    }\n\n    handleReceivedMove(data) {\n        if (this.state.toMove === this.state.playerTeam || this.state.isGameEnded) {\n            return;\n        }\n        let move = data.move;\n        if (move.length > this.state.stepsLeft) {\n            throw new Error(\"More moves than possible\");\n        }\n        move.forEach(async (step) => {\n            if (isStepValid(this.state, step[0], step[1])) {\n                await this.makeStep(step[0], step[1]);\n            }\n        })\n    }\n\n    handleRollBack = () => {\n        if (this.state.history.length === 0 || this.props.type !== 'offline') {\n            // Initial state. Nothing to roll back\n            return;\n        }\n        const history = this.state.history.slice();\n        const field = this.state.field.slice();\n        let toMove = this.state.toMove;\n        let stepsLeft = this.state.stepsLeft + 1;\n        let isGameEnded = this.state.isGameEnded;\n        let winner = this.state.winner;\n\n        const move = history.pop();\n        const currState = field[move[0] * this.sizeW + move[1]]; // Hope it is not 0 (that would cause an error, but should be impossible)\n        // Next state is 1 for -2 and 0 for (1, -1) so it is opposite sign and smaller modulo\n        field[move[0] * this.sizeW + move[1]] = -Math.sign(currState) * (Math.abs(currState) - 1);\n\n        if (stepsLeft > 3) {\n            // We tried to roll back when stepsLeft ==  3 --> after roll back different team moves and has last move.\n            toMove = -toMove;\n            stepsLeft = 1;\n            // in this case we may have game end in place.\n            if (isGameEnded) {\n                isGameEnded = false;\n                winner = null;\n            }\n        }\n\n        this.setState({\n            field: field,\n            toMove: toMove,\n            stepsLeft: stepsLeft,\n            history: history,\n            isGameEnded: isGameEnded,\n            winner: winner,\n        })\n    };\n\n    handleCellClick = (h, w) => {\n        const playerCantMoveNow = this.state.toMove !== this.state.playerTeam && this.props.type !== 'offline';\n        if (playerCantMoveNow || this.state.isGameEnded || !isStepValid(this.state, h, w)) {\n            return;\n        }\n        this.makeStep(h, w).then(this.sendStateIfNeeded.bind(this));\n    };\n\n\n    makeStep(h, w) {\n        const field = this.state.field.slice();\n        const history = this.state.history.slice();\n        let stepsLeft = this.state.stepsLeft - 1;\n        let toMove = this.state.toMove;\n\n        let winner = this.state.winner;\n        let isGameEnded = this.state.isGameEnded;\n\n\n        field[h * this.sizeW + w] = getNextState(field[h * this.sizeW + w], this.state.toMove);\n        history.push([h, w]);\n\n        // Switch move\n        if (stepsLeft === 0) {\n            toMove = -toMove;\n            stepsLeft = 3;\n\n            //check  if game ended:\n            let new_state = {... this.state};\n            new_state.field = field.slice();\n            new_state.history = history.slice();\n            new_state.stepsLeft = stepsLeft;\n            new_state.toMove = toMove;\n\n            if (!isValidMoveExists(new_state)){\n                //end game\n                isGameEnded = true;\n                winner = - toMove\n            }\n        }\n\n        return new Promise((resolve) => {\n            this.setState({\n                toMove: toMove,\n                field: field,\n                stepsLeft: stepsLeft,\n                history: history,\n                isGameEnded: isGameEnded,\n                winner: winner,\n            }, resolve);\n        });\n    }\n\n    sendStateIfNeeded() {\n        //  don't call it on invalid or not on time moves.\n        const aiMoves = this.props.type === 'ai' && this.state.playerTeam !== this.state.toMove;\n        const onlineGame = this.props.type === 'online';\n        if ((aiMoves && !this.state.isGameEnded) || onlineGame) {\n            if (this.state.isBackendConnected){\n                this.socket.send(JSON.stringify(this.state));\n                console.log('state sent')\n            }else{\n                console.log('state not sent, retrying in two seconds');\n                this.timeouts.push(setTimeout(()=>{this.sendStateIfNeeded()}, 2000))\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container is-fluid game-container\">\n\n                <div className=\"tile is-ancestor\">\n                    <div className=\"tile is-parent is-8\">\n                        <div className=\"tile is-child is-game-tile\">\n                            <Field sizeH={this.sizeH} sizeW={this.sizeW} onCellClick={this.handleCellClick}\n                                   field={this.state.field}/>\n                        </div>\n                    </div>\n                    <div className=\"tile is-parent\">\n                        <div className=\"tile is-child is-info-bar \">\n                            <InfoBar onMenuClick={this.props.onMenuClick} onRollBack={this.handleRollBack}\n                                     gameState={this.state} type={this.props.type}/>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default Game","import React from \"react\";\n\n\nclass Rules extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentSlide: 1,\n            data: {\n                1: {\n                    imgSrc: \"/img/rules/1.png\",\n                    element: <div className=\"rules-text content\">\n                        <ul>\n                            <li>Two players play on square grid.</li>\n                            <li>Each player can make 3 steps on a cell near his active dots (viruses) during his turn.\n                            </li>\n                        </ul>\n                    </div>\n                },\n                2: {\n                    imgSrc: \"/img/rules/2.png\",\n                    element: <div className=\"rules-text content\">\n                        <ul>\n                            <li>If you make a step on opponents virus, you create a base.</li>\n                            <li>Each base can either be active or inactive.</li>\n                        </ul>\n                    </div>\n                },\n                3: {\n                    imgSrc: \"/img/rules/3.png\",\n                    element: <div className=\"rules-text content\">\n                        <ul>\n                            <li>Any base, that have a virus or <b>active</b> base near it is active.</li>\n                        </ul>\n                    </div>\n                },\n                4: {\n                    imgSrc: \"/img/rules/4.png\",\n                    element: <content className=\"rules-text content\">\n                        <ul>\n                            <li>You can make steps on cells that are near viruses, or active bases.</li>\n                            <li>Inactive bases can not produce viruses.</li>\n                        </ul>\n                    </content>\n                },\n                5: {\n                    imgSrc: \"/img/rules/5.png\",\n                    element: <div className=\"rules-text content\">\n                        <ul>\n                            <li>Player that can not make a legal 3-step move loses.</li>\n                            <li>That's it! What the winning move for white would be here?</li>\n                        </ul>\n                    </div>\n                }\n\n            }\n        };\n\n        this.onNext = this.onNext.bind(this);\n        this.onPrev = this.onPrev.bind(this);\n    }\n\n    onNext = () => {\n        if (this.state.currentSlide === Object.keys(this.state.data).length) {\n            return\n        }\n        this.setState({currentSlide: this.state.currentSlide + 1})\n    };\n\n    onPrev = () => {\n        if (this.state.currentSlide === 1) {\n            return\n        }\n        this.setState({currentSlide: this.state.currentSlide - 1})\n    };\n\n    render() {\n        return (<div>\n            <div className=\"has-text-centered rules-title is-bold\">Rules</div>\n            <div className=\"container\">\n                <div className=\"columns\">\n                    <div className=\"column is-5-tablet rules-image\">\n                        <img src={this.state.data[this.state.currentSlide].imgSrc} alt=\"screen shot\"/>\n                    </div>\n                    <div className=\"column rules-text\">\n                        {this.state.data[this.state.currentSlide].element}\n                    </div>\n                </div>\n            </div>\n            <div disabled={this.state.currentSlide === Object.keys(this.state.data).length}\n                    className=\"button rules-button rules-next-button button-on-danger\"\n                    onClick={this.onNext}> Next\n            </div>\n            <div disabled={this.state.currentSlide === 1}\n                    className=\"button rules-button rules-prev-button button-on-danger\"\n                    onClick={this.onPrev}> Previous\n            </div>\n            <div className=\"button rules-button rules-back-button button-on-danger\"\n                    onClick={this.props.onCloseClick}>Close\n            </div>\n        </div>)\n    }\n}\n\nexport default Rules","import React from \"react\";\n\nclass OnlineModal extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (<div className=\"container\">\n            <div className=\"tile is-ancestor\">\n                <div className=\"tile is-parent\">\n                    <div className=\"tile is-child notification\">\n                        Create room\n                    </div>\n                </div>\n                <div className=\"tile is-parent\">\n\n                    <div className=\"tile is-child notification\">\n                        Join room\n                    </div>\n\n                </div>\n            </div>\n\n\n        </div>)\n    }\n}\n\nexport default OnlineModal","import React from \"react\";\nimport ReactModal from \"react-modal\"\nimport Rules from \"./Rules\"\nimport OnlineModal from \"./OnlineModal\"\n\nReactModal.setAppElement('#root');\n\nclass Menu extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleToggleRules = this.handleToggleRules.bind(this);\n        this.handleToggleOnline = this.handleToggleOnline.bind(this);\n        this.state = {\n            showRules: false,\n            showOnline: false\n        }\n\n    }\n    handleToggleRules () {\n        this.setState({ showRules: !this.state.showRules });\n    }\n    handleToggleOnline () {\n        this.setState({ showOnline: !this.state.showOnline });\n    }\n\n    render() {\n        return (\n\n            <div className=\"container is-fluid menu-hero\">\n                <div className=\"tile is-ancestor\">\n                    <div className='tile is-parent'>\n                        <div className=\"tile is-parent is-12\">\n                            <div className=\"tile is-child notification is-game-title\">\n                                <div className=\"has-text-centered\">\n                                    <div className=\"title\">Virus War Game</div>\n                                    <div className=\"subtitle\">Two-player game with easy rules and deep strategy</div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"title is-ancestor\">\n                    <div className=\"tile\">\n                        <div className=\"tile is-parent \">\n                            <article className=\"tile is-child notification is-danger\">\n                                <div className=\"has-text-centered\">\n                                    <div className=\"title\">Read Rules</div>\n                                </div>\n                                <div className=\"button menu-button button-on-danger\" onClick={this.handleToggleRules}><span role=\"img\" aria-label=\"book\">📖</span> Rules</div>\n                            </article>\n                        </div>\n\n                        <div className=\"tile is-parent \">\n\n                            <article className=\"tile is-child notification is-warning\">\n                                <div className=\"has-text-centered\">\n                                    <div className=\"title\">Play With AI</div>\n                                </div>\n                                <div className=\"button menu-button button-on-warning\" onClick={this.props.onNavigationClick.bind(this, 'tony')}><span role=\"img\" aria-label=\"easy\">👶</span> Tony</div>\n                                <div className=\"button menu-button button-on-warning\" onClick={this.props.onNavigationClick.bind(this, 'jessie')}><span role=\"img\" aria-label=\"medium\">🤓</span> Jessie</div>\n                                <div className=\"button menu-button button-on-warning\" onClick={this.props.onNavigationClick.bind(this, 'max')}><span role=\"img\"  aria-label=\"hard\">🤖</span> Max</div>\n                            </article>\n                        </div>\n                        <div className=\"tile is-parent \">\n\n                            <article className=\"tile is-child notification is-info\">\n                                <div className=\"has-text-centered\">\n                                    <div className=\"title\">Play With a Friend</div>\n                                </div>\n                                <div className=\"button menu-button button-on-info\" onClick={this.props.onNavigationClick.bind(this, 'offline')}><span role=\"img\" aria-label=\"offline\">🤜🤛</span>‍ Offline</div>\n                                <div className=\"button menu-button button-on-info\" onClick={this.handleToggleOnline}><span role=\"img\" aria-label=\"online\">🎮</span> Online</div>\n                            </article>\n                        </div>\n                    </div>\n                </div>\n\n                <ReactModal\n                    isOpen={this.state.showRules}\n                    onRequestClose={this.handleToggleRules}\n                    className=\"rules-modal\"\n                    overlayClassName=\"overlay\"\n                    shouldFocusAfterRender={false}\n                >\n                    <Rules onCloseClick={this.handleToggleRules}/>\n\n                </ReactModal>\n                <ReactModal\n                    isOpen={this.state.showOnline}\n                    onRequestClose={this.handleToggleOnline}\n                    className=\"rules-modal\"\n                    overlayClassName=\"overlay\"\n                    shouldFocusAfterRender={false}\n                >\n                    <OnlineModal onCloseClick={this.handleToggleOnline} createRoom={this.handleToggleOnline} joinRoom={this.handleToggleOnline}/>\n\n                </ReactModal>\n            </div>\n        )\n    }\n}\n\nexport default Menu","import React from \"react\";\n\nclass Footer extends React.Component {\n\n    render() {\n        return (\n            <footer className=\"footer my-footer\">\n                <div className=\"content has-text-centered\">\n                    <p>\n                        Created by <a href=\"https://nkorobkov.com\">Nikita Korobkov</a>. Code is licensed under\n                        <a href=\"http://opensource.org/licenses/mit-license.php\"> MIT</a> license.\n                    </p>\n                    <p>\n                        <a href=\"https://github.com/nkorobkov/virus-frontend\">Source Frontend</a> ||\n                        <a href=\"https://github.com/nkorobkov/virus-game\"> Source Backend</a> ||\n                        <a href=\"https://nkorobkov.com/projects/virus\"> Project Description</a>\n                    </p>\n\n                    {/*<p>*/}\n                        {/*Share:*/}\n                        {/*<a href=\"https://github.com/nkorobkov/virus-frontend\">Facebook</a> ||*/}\n                        {/*<a href=\"https://github.com/nkorobkov/virus-game\"> Twitter</a> ||*/}\n                        {/*<a href=\"https://nkorobkov.com/projects/virus\"> Mail</a>*/}\n                    {/*</p>*/}\n                </div>\n            </footer>\n        )\n    }\n}\n\nexport default Footer","import React from 'react';\nimport Game from './components/Game';\nimport Menu from './components/Menu';\nimport Footer from './components/Footer';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {activePage: 'menu'};\n        this.handleMenuClick = this.handleMenuClick.bind(this);\n        this.handleNavigation = this.handleNavigation.bind(this)\n\n    }\n\n    handleNavigation = (page) => {\n        this.setState({activePage: page});\n    };\n\n    handleMenuClick = () => {\n        this.setState({activePage: 'menu'});\n    };\n\n    render() {\n        const activePage = this.state.activePage;\n        let element;\n        switch (activePage) {\n            case 'menu':\n                element = <Menu onNavigationClick={this.handleNavigation}/>;\n                break;\n            case 'tony':\n                element = <Game type='ai' aiType='tony' onMenuClick={this.handleMenuClick}/>;\n                break;\n            case 'jessie':\n                element = <Game type='ai' aiType='jessie' onMenuClick={this.handleMenuClick}/>;\n                break;\n            case 'max':\n                element = <Game type='ai' aiType='max' onMenuClick={this.handleMenuClick}/>;\n                break;\n            case 'offline':\n                element = <Game type='offline' onMenuClick={this.handleMenuClick}/>;\n                break;\n            default:\n                element = <Menu onNavigationClick={this.handleNavigation}/>;\n                break;\n        }\n        return (\n            <div>\n                {element}\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}